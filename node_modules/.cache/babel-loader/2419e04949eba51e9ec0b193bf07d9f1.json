{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Goragod Pongthanisor\\\\Desktop\\\\blockly-react\\\\src\\\\App.js\";\n\n/**\r\n * @license\r\n *\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Main React component that includes the Blockly component.\r\n * @author samelh@google.com (Sam El-Husseini)\r\n */\nimport React from 'react';\nimport './App.css';\nimport logo from \"./logo.svg\";\nimport BlocklyComponent, { Block, Value, Field, Shadow } from './Blockly';\nimport BlocklyJS from 'blockly/javascript';\nimport './blocks/customblocks';\nimport './generator/generator';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.generateCode = () => {\n      var code = '';\n      code += 'var actionID = 0;\\n';\n      var codeFromBlock = BlocklyJS.workspaceToCode(this.simpleWorkspace.current.workspace);\n      code += codeFromBlock;\n      console.log(code);\n\n      try {\n        eval(code);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.simpleWorkspace = React.createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \" Virach Labo Blockly \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.generateCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, \"Convert\")), /*#__PURE__*/React.createElement(\"body\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BlocklyComponent, {\n      ref: this.simpleWorkspace,\n      readOnly: false,\n      trashcan: true,\n      media: 'media/',\n      move: {\n        scrollbars: true,\n        drag: true,\n        wheel: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Block, {\n      type: \"robot_action_speak\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Block, {\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Block, {\n      type: \"robot_action_move_forward\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Block, {\n      type: \"controls_repeat_ext\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Value, {\n      name: \"TIMES\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Shadow, {\n      type: \"math_number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"NUM\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    }, \"10\")))))));\n  }\n\n}\n\nexport default App; // <div className=\"App\">\n// <header className=\"App-header\">\n//   <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//   <button onClick={this.generateCode}>Convert</button>\n//   <BlocklyComponent ref={this.simpleWorkspace}\n//   readOnly={false} trashcan={true} media={'media/'}\n//   move={{\n//     scrollbars: true,\n//     drag: true,\n//     wheel: true\n//   }}\n//   initialXml={`\n// <xml xmlns=\"http://www.w3.org/1999/xhtml\">\n// <block type=\"controls_ifelse\" x=\"0\" y=\"0\"></block>\n// </xml>\n// `}>\n//     <Block type=\"test_react_field\" />\n//     <Block type=\"test_react_date_field\" />\n//     <Block type=\"controls_ifelse\" />\n//     <Block type=\"logic_compare\" />\n//     <Block type=\"logic_operation\" />\n//     <Block type=\"controls_repeat_ext\">\n//       <Value name=\"TIMES\">\n//         <Shadow type=\"math_number\">\n//           <Field name=\"NUM\">10</Field>\n//         </Shadow>\n//       </Value>\n//     </Block>\n//     <Block type=\"logic_operation\" />\n//     <Block type=\"logic_negate\" />\n//     <Block type=\"logic_boolean\" />\n//     <Block type=\"logic_null\" disabled=\"true\" />\n//     <Block type=\"logic_ternary\" />\n//     <Block type=\"text_charAt\">\n//       <Value name=\"VALUE\">\n//         <Block type=\"variables_get\">\n//           <Field name=\"VAR\">text</Field>\n//         </Block>\n//       </Value>\n//     </Block>\n//   </BlocklyComponent>\n// </header>\n// </div>\n// );\n// }\n// }","map":{"version":3,"sources":["C:/Users/Goragod Pongthanisor/Desktop/blockly-react/src/App.js"],"names":["React","BlocklyComponent","Block","Value","Field","Shadow","BlocklyJS","App","Component","constructor","props","generateCode","code","codeFromBlock","workspaceToCode","simpleWorkspace","current","workspace","console","log","eval","error","createRef","render","scrollbars","drag","wheel"],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n *\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * @fileoverview Main React component that includes the Blockly component.\r\n * @author samelh@google.com (Sam El-Husseini)\r\n */\r\n\r\nimport React from 'react';\r\nimport './App.css';\r\n\r\nimport logo from './logo.svg';\r\n\r\nimport BlocklyComponent, { Block, Value, Field, Shadow } from './Blockly';\r\n\r\nimport BlocklyJS from 'blockly/javascript';\r\n\r\nimport './blocks/customblocks';\r\nimport './generator/generator';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.simpleWorkspace = React.createRef();\r\n  }\r\n\r\n  generateCode = () => {\r\n    var code = '';\r\n    code += 'var actionID = 0;\\n';\r\n    var codeFromBlock = BlocklyJS.workspaceToCode(this.simpleWorkspace.current.workspace);\r\n    code += codeFromBlock;\r\n    console.log(code);\r\n    try {\r\n      eval(code);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\r\n          <h1> Virach Labo Blockly </h1>\r\n          <button onClick={this.generateCode}>Convert</button>\r\n        </header>\r\n        <body>\r\n        <BlocklyComponent\r\n            ref={this.simpleWorkspace}\r\n            readOnly={false}\r\n            trashcan={true}\r\n            media={'media/'}\r\n            move={{\r\n              scrollbars: true,\r\n              drag: true,\r\n              wheel: true,\r\n            }}\r\n          >\r\n            <Block type=\"robot_action_speak\"></Block>\r\n            <Block type=\"text\"></Block>\r\n            <Block type=\"robot_action_move_forward\"></Block>\r\n            {/* <Block type=\"robot_action_move_backward\"></Block>\r\n            <Block type=\"robot_action_move_left\"></Block>\r\n            <Block type=\"robot_action_move_right\"></Block> */}\r\n            <Block type=\"controls_repeat_ext\">\r\n              <Value name=\"TIMES\">\r\n                <Shadow type=\"math_number\">\r\n                  <Field name=\"NUM\">10</Field>\r\n                </Shadow>\r\n              </Value>\r\n            </Block>\r\n          </BlocklyComponent>\r\n        </body>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n// <div className=\"App\">\r\n// <header className=\"App-header\">\r\n//   <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n//   <button onClick={this.generateCode}>Convert</button>\r\n//   <BlocklyComponent ref={this.simpleWorkspace}\r\n//   readOnly={false} trashcan={true} media={'media/'}\r\n//   move={{\r\n//     scrollbars: true,\r\n//     drag: true,\r\n//     wheel: true\r\n//   }}\r\n//   initialXml={`\r\n// <xml xmlns=\"http://www.w3.org/1999/xhtml\">\r\n// <block type=\"controls_ifelse\" x=\"0\" y=\"0\"></block>\r\n// </xml>\r\n// `}>\r\n//     <Block type=\"test_react_field\" />\r\n//     <Block type=\"test_react_date_field\" />\r\n//     <Block type=\"controls_ifelse\" />\r\n//     <Block type=\"logic_compare\" />\r\n//     <Block type=\"logic_operation\" />\r\n//     <Block type=\"controls_repeat_ext\">\r\n//       <Value name=\"TIMES\">\r\n//         <Shadow type=\"math_number\">\r\n//           <Field name=\"NUM\">10</Field>\r\n//         </Shadow>\r\n//       </Value>\r\n//     </Block>\r\n//     <Block type=\"logic_operation\" />\r\n//     <Block type=\"logic_negate\" />\r\n//     <Block type=\"logic_boolean\" />\r\n//     <Block type=\"logic_null\" disabled=\"true\" />\r\n//     <Block type=\"logic_ternary\" />\r\n//     <Block type=\"text_charAt\">\r\n//       <Value name=\"VALUE\">\r\n//         <Block type=\"variables_get\">\r\n//           <Field name=\"VAR\">text</Field>\r\n//         </Block>\r\n//       </Value>\r\n//     </Block>\r\n//   </BlocklyComponent>\r\n// </header>\r\n// </div>\r\n// );\r\n// }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}