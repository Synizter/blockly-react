{"ast":null,"code":"var _jsxFileName = \"/Users/goragodp/Project/blockly-react/src/App.js\";\n\n/**\n * @license\n *\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Main React component that includes the Blockly component.\n * @author samelh@google.com (Sam El-Husseini)\n */\nimport React from 'react';\nimport './App.css';\nimport logo from \"./logo.svg\";\nimport BlocklyComponent, { Block, Value, Field, Shadow } from './Blockly';\nimport BlocklyJS from 'blockly/javascript';\nimport './blocks/customblocks';\nimport './generator/generator';\nimport RobotYoutubeLive from './RobotYoutubeLive';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.generateCode = () => {\n      var code = '';\n      code += 'var actionID = 1;\\n';\n      code += 'var locationID = 1\\n'; // Location ID\n\n      code += 'var url = \\'https://temi-cmd.firebaseio.com/\\'\\n';\n      code += 'function makeRequest(method, url,json_content) {\\n\\\n      return new Promise(function (resolve, reject) {\\n\\\n          let xhr = new XMLHttpRequest();\\n\\\n          xhr.open(method, url,false);\\n\\\n          xhr.setRequestHeader(\\'Content-Type\\', \\'application/json\\');\\n\\\n          xhr.onload = function () {\\n\\\n              if (this.status >= 200 && this.status < 300) {\\n\\\n                  resolve(xhr.response);\\n\\\n              } else {\\n\\\n                  reject({\\n\\\n                      status: this.status,\\n\\\n                      statusText: xhr.statusText\\n\\\n                  });\\n\\\n              }\\n\\\n          };\\n\\\n          xhr.onerror = function () {\\n\\\n              reject({\\n\\\n                  status: this.status,\\n\\\n                  statusText: xhr.statusText\\n\\\n              });\\n\\\n          };\\n\\\n          xhr.send(JSON.stringify(JSON.parse(json_content)));\\n\\\n      });\\n\\\n  }\\n';\n      code += 'async function SendCmd(method ,url, content) {\\n\\\n    var result = await makeRequest(method, url, content)\\n\\\n    console.log(result);\\n\\\n  }\\n\\n';\n      code += 'SendCmd(\\'PUT\\', url + \"ProgramInfo\", \\'{\\\"status\\\":\\\"UPLOADING\\\"}\\')\\n';\n      var codeFromBlock = BlocklyJS.workspaceToCode(this.simpleWorkspace.current.workspace);\n      code += codeFromBlock;\n      code += 'SendCmd(\\'PUT\\' ,url + \"ProgramInfo/status.json\", \\'{\\\"status\\\":\\\"DONE\\\"}\\')\\n'; // code += 'var speak_req = new XMLHttpRequest();\\n';\n      // code += 'var json_content = \\'{\"status\":\"DONE\"}\\';\\n';\n      // code += \"var url = 'https://test-cmd-queue.firebaseio.com/ProgramInfo/status.json';\\n\";\n      // code += \"speak_req.open('PUT', url, true);\\n\";\n      // code += \"speak_req.setRequestHeader('Content-Type', 'application/json');\\n\";\n      // code += 'speak_req.send(JSON.stringify(JSON.parse(json_content)));\\n';\n\n      console.log(code);\n\n      try {\n        eval(code);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.simpleWorkspace = React.createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, \" Virach Labo Blockly \"), /*#__PURE__*/React.createElement(RobotYoutubeLive, {\n      videoId: \"QpaL5bVmD5A\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.generateCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, \"Convert\")), /*#__PURE__*/React.createElement(\"body\", {\n      class: \"App-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BlocklyComponent, {\n      ref: this.simpleWorkspace,\n      readOnly: false,\n      trashcan: true,\n      media: 'media/',\n      move: {\n        scrollbars: true,\n        drag: true,\n        wheel: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Block, {\n      type: \"robot_action_speak\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Block, {\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Block, {\n      type: \"robot_action_move_forward\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Block, {\n      type: \"robot_action_move_backward\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Block, {\n      type: \"robot_action_move_left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Block, {\n      type: \"robot_action_move_right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Block, {\n      type: \"robot_action_save_location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Block, {\n      type: \"controls_repeat_ext\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Value, {\n      name: \"TIMES\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Shadow, {\n      type: \"math_number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"NUM\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    }, \"10\")))))));\n  }\n\n}\n\nexport default App; // <div className=\"App\">\n// <header className=\"App-header\">\n//   <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//   <button onClick={this.generateCode}>Convert</button>\n//   <BlocklyComponent ref={this.simpleWorkspace}\n//   readOnly={false} trashcan={true} media={'media/'}\n//   move={{\n//     scrollbars: true,\n//     drag: true,\n//     wheel: true\n//   }}\n//   initialXml={`\n// <xml xmlns=\"http://www.w3.org/1999/xhtml\">\n// <block type=\"controls_ifelse\" x=\"0\" y=\"0\"></block>\n// </xml>\n// `}>\n//     <Block type=\"test_react_field\" />\n//     <Block type=\"test_react_date_field\" />\n//     <Block type=\"controls_ifelse\" />\n//     <Block type=\"logic_compare\" />\n//     <Block type=\"logic_operation\" />\n//     <Block type=\"controls_repeat_ext\">\n//       <Value name=\"TIMES\">\n//         <Shadow type=\"math_number\">\n//           <Field name=\"NUM\">10</Field>\n//         </Shadow>\n//       </Value>\n//     </Block>\n//     <Block type=\"logic_operation\" />\n//     <Block type=\"logic_negate\" />\n//     <Block type=\"logic_boolean\" />\n//     <Block type=\"logic_null\" disabled=\"true\" />\n//     <Block type=\"logic_ternary\" />\n//     <Block type=\"text_charAt\">\n//       <Value name=\"VALUE\">\n//         <Block type=\"variables_get\">\n//           <Field name=\"VAR\">text</Field>\n//         </Block>\n//       </Value>\n//     </Block>\n//   </BlocklyComponent>\n// </header>\n// </div>\n// );\n// }\n// }","map":{"version":3,"sources":["/Users/goragodp/Project/blockly-react/src/App.js"],"names":["React","BlocklyComponent","Block","Value","Field","Shadow","BlocklyJS","RobotYoutubeLive","App","Component","constructor","props","generateCode","code","codeFromBlock","workspaceToCode","simpleWorkspace","current","workspace","console","log","eval","error","createRef","render","scrollbars","drag","wheel"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Main React component that includes the Blockly component.\n * @author samelh@google.com (Sam El-Husseini)\n */\n\n\n \n\nimport React from 'react';\nimport './App.css';\n\nimport logo from './logo.svg';\n\nimport BlocklyComponent, { Block, Value, Field, Shadow } from './Blockly';\n\nimport BlocklyJS from 'blockly/javascript';\n\nimport './blocks/customblocks';\nimport './generator/generator';\n\nimport RobotYoutubeLive from './RobotYoutubeLive'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.simpleWorkspace = React.createRef();\n  }\n\n  generateCode = () => {\n    var code = '';\n    code += 'var actionID = 1;\\n';\n    code += 'var locationID = 1\\n' // Location ID\n    code += 'var url = \\'https://temi-cmd.firebaseio.com/\\'\\n';\n\n    code += 'function makeRequest(method, url,json_content) {\\n\\\n      return new Promise(function (resolve, reject) {\\n\\\n          let xhr = new XMLHttpRequest();\\n\\\n          xhr.open(method, url,false);\\n\\\n          xhr.setRequestHeader(\\'Content-Type\\', \\'application/json\\');\\n\\\n          xhr.onload = function () {\\n\\\n              if (this.status >= 200 && this.status < 300) {\\n\\\n                  resolve(xhr.response);\\n\\\n              } else {\\n\\\n                  reject({\\n\\\n                      status: this.status,\\n\\\n                      statusText: xhr.statusText\\n\\\n                  });\\n\\\n              }\\n\\\n          };\\n\\\n          xhr.onerror = function () {\\n\\\n              reject({\\n\\\n                  status: this.status,\\n\\\n                  statusText: xhr.statusText\\n\\\n              });\\n\\\n          };\\n\\\n          xhr.send(JSON.stringify(JSON.parse(json_content)));\\n\\\n      });\\n\\\n  }\\n';\n  code += 'async function SendCmd(method ,url, content) {\\n\\\n    var result = await makeRequest(method, url, content)\\n\\\n    console.log(result);\\n\\\n  }\\n\\n';\n  \n  code += 'SendCmd(\\'PUT\\', url + \"ProgramInfo\", \\'{\\\"status\\\":\\\"UPLOADING\\\"}\\')\\n';\n  var codeFromBlock = BlocklyJS.workspaceToCode(this.simpleWorkspace.current.workspace);\n  code += codeFromBlock;\n  code += 'SendCmd(\\'PUT\\' ,url + \"ProgramInfo/status.json\", \\'{\\\"status\\\":\\\"DONE\\\"}\\')\\n';\n\n    // code += 'var speak_req = new XMLHttpRequest();\\n';\n    // code += 'var json_content = \\'{\"status\":\"DONE\"}\\';\\n';\n    // code += \"var url = 'https://test-cmd-queue.firebaseio.com/ProgramInfo/status.json';\\n\";\n    // code += \"speak_req.open('PUT', url, true);\\n\";\n    // code += \"speak_req.setRequestHeader('Content-Type', 'application/json');\\n\";\n    // code += 'speak_req.send(JSON.stringify(JSON.parse(json_content)));\\n';\n    console.log(code);\n    try {\n      eval(code);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1> Virach Labo Blockly </h1>\n          <RobotYoutubeLive videoId=\"QpaL5bVmD5A\"/>\n          <button onClick={this.generateCode}>Convert</button>\n        </header>\n\n        <body class=\"App-body\">\n        <BlocklyComponent\n            ref={this.simpleWorkspace}\n            readOnly={false}\n            trashcan={true}\n            media={'media/'}\n            move={{\n              scrollbars: true,\n              drag: true,\n              wheel: true,\n            }}\n          >\n            <Block type=\"robot_action_speak\"></Block>\n            <Block type=\"text\"></Block>\n            <Block type=\"robot_action_move_forward\"></Block>\n            <Block type=\"robot_action_move_backward\"></Block>\n            <Block type=\"robot_action_move_left\"></Block>\n            <Block type=\"robot_action_move_right\"></Block>\n            <Block type=\"robot_action_save_location\"></Block>\n            <Block type=\"controls_repeat_ext\">\n              <Value name=\"TIMES\">\n                <Shadow type=\"math_number\">\n                  <Field name=\"NUM\">10</Field>\n                </Shadow>\n              </Value>\n            </Block>\n            {/* DUMMY\n            <Block type=\"controls_ifelse\"></Block>\n            <Block type=\"logic_compare\" />\n            <Block type=\"dm_robot_action_start_cov\"></Block>\n            <Block type=\"dm_robot_intetion\"></Block>\n            <Block type=\"dm_robot_callstaff\"></Block>\n            <Block type=\"dm_robot_show_dir\"></Block> */}\n          </BlocklyComponent>\n        </body>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// <div className=\"App\">\n// <header className=\"App-header\">\n//   <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//   <button onClick={this.generateCode}>Convert</button>\n//   <BlocklyComponent ref={this.simpleWorkspace}\n//   readOnly={false} trashcan={true} media={'media/'}\n//   move={{\n//     scrollbars: true,\n//     drag: true,\n//     wheel: true\n//   }}\n//   initialXml={`\n// <xml xmlns=\"http://www.w3.org/1999/xhtml\">\n// <block type=\"controls_ifelse\" x=\"0\" y=\"0\"></block>\n// </xml>\n// `}>\n//     <Block type=\"test_react_field\" />\n//     <Block type=\"test_react_date_field\" />\n//     <Block type=\"controls_ifelse\" />\n//     <Block type=\"logic_compare\" />\n//     <Block type=\"logic_operation\" />\n//     <Block type=\"controls_repeat_ext\">\n//       <Value name=\"TIMES\">\n//         <Shadow type=\"math_number\">\n//           <Field name=\"NUM\">10</Field>\n//         </Shadow>\n//       </Value>\n//     </Block>\n//     <Block type=\"logic_operation\" />\n//     <Block type=\"logic_negate\" />\n//     <Block type=\"logic_boolean\" />\n//     <Block type=\"logic_null\" disabled=\"true\" />\n//     <Block type=\"logic_ternary\" />\n//     <Block type=\"text_charAt\">\n//       <Value name=\"VALUE\">\n//         <Block type=\"variables_get\">\n//           <Field name=\"VAR\">text</Field>\n//         </Block>\n//       </Value>\n//     </Block>\n//   </BlocklyComponent>\n// </header>\n// </div>\n// );\n// }\n// }\n"]},"metadata":{},"sourceType":"module"}