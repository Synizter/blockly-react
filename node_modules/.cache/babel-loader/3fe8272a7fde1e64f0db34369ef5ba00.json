{"ast":null,"code":"var _jsxFileName = \"/Users/goragodp/Project/blockly-react/src/Blockly/BlocklyComponent.jsx\";\n\n/**\n * @license\n *\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Blockly React Component.\n * @author samelh@google.com (Sam El-Husseini)\n */\nimport React from 'react';\nimport './BlocklyComponent.css';\nimport Blockly from 'blockly/core';\nimport locale from 'blockly/msg/en';\nimport 'blockly/blocks';\nBlockly.setLocale(locale);\n\nclass BlocklyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.blocklyDiv = React.createRef();\n    this.toolbox = React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      initialXml,\n      children,\n      ...rest\n    } = this.props;\n    this.primaryWorkspace = Blockly.inject(this.blocklyDiv.current, {\n      toolbox: this.toolbox.current,\n      ...rest\n    });\n\n    if (initialXml) {\n      Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(initialXml), this.primaryWorkspace);\n    }\n  }\n\n  get workspace() {\n    return this.primaryWorkspace;\n  }\n\n  setXml(xml) {\n    Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(xml), this.primaryWorkspace);\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.blocklyDiv,\n      id: \"blocklyDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"xml\", {\n      xmlns: \"https://developers.google.com/blockly/xml\",\n      is: \"blockly\",\n      style: {\n        display: 'none'\n      },\n      ref: this.toolbox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, children));\n  }\n\n}\n\nexport default BlocklyComponent;","map":{"version":3,"sources":["/Users/goragodp/Project/blockly-react/src/Blockly/BlocklyComponent.jsx"],"names":["React","Blockly","locale","setLocale","BlocklyComponent","Component","constructor","props","blocklyDiv","createRef","toolbox","componentDidMount","initialXml","children","rest","primaryWorkspace","inject","current","Xml","domToWorkspace","textToDom","workspace","setXml","xml","render","display"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;AAkBA;;;;AAKA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;AAEA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAO,gBAAP;AAEAD,OAAO,CAACE,SAAR,CAAkBD,MAAlB;;AAEA,MAAME,gBAAN,SAA+BJ,KAAK,CAACK,SAArC,CAA+C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,UAAL,GAAkBR,KAAK,CAACS,SAAN,EAAlB;AACA,SAAKC,OAAL,GAAeV,KAAK,CAACS,SAAN,EAAf;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA,QAAd;AAAwB,SAAGC;AAA3B,QAAoC,KAAKP,KAA/C;AACA,SAAKQ,gBAAL,GAAwBd,OAAO,CAACe,MAAR,CACpB,KAAKR,UAAL,CAAgBS,OADI,EAEpB;AACIP,MAAAA,OAAO,EAAE,KAAKA,OAAL,CAAaO,OAD1B;AAEI,SAAGH;AAFP,KAFoB,CAAxB;;AAQA,QAAIF,UAAJ,EAAgB;AACZX,MAAAA,OAAO,CAACiB,GAAR,CAAYC,cAAZ,CAA2BlB,OAAO,CAACiB,GAAR,CAAYE,SAAZ,CAAsBR,UAAtB,CAA3B,EAA8D,KAAKG,gBAAnE;AACH;AACJ;;AAED,MAAIM,SAAJ,GAAgB;AACZ,WAAO,KAAKN,gBAAZ;AACH;;AAEDO,EAAAA,MAAM,CAACC,GAAD,EAAM;AACRtB,IAAAA,OAAO,CAACiB,GAAR,CAAYC,cAAZ,CAA2BlB,OAAO,CAACiB,GAAR,CAAYE,SAAZ,CAAsBG,GAAtB,CAA3B,EAAuD,KAAKR,gBAA5D;AACH;;AAEDS,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEX,MAAAA;AAAF,QAAe,KAAKN,KAA1B;AAEA,wBAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH;AAAK,MAAA,GAAG,EAAE,KAAKC,UAAf;AAA2B,MAAA,EAAE,EAAC,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,eAEH;AAAK,MAAA,KAAK,EAAC,2CAAX;AAAuD,MAAA,EAAE,EAAC,SAA1D;AAAoE,MAAA,KAAK,EAAE;AAAEiB,QAAAA,OAAO,EAAE;AAAX,OAA3E;AAAgG,MAAA,GAAG,EAAE,KAAKf,OAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKG,QADL,CAFG,CAAP;AAMH;;AAvC0C;;AA0C/C,eAAeT,gBAAf","sourcesContent":["/**\n * @license\n *\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Blockly React Component.\n * @author samelh@google.com (Sam El-Husseini)\n */\n\nimport React from 'react';\nimport './BlocklyComponent.css';\n\nimport Blockly from 'blockly/core';\nimport locale from 'blockly/msg/en';\nimport 'blockly/blocks';\n\nBlockly.setLocale(locale);\n\nclass BlocklyComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.blocklyDiv = React.createRef();\n        this.toolbox = React.createRef();\n    }\n\n    componentDidMount() {\n        const { initialXml, children, ...rest } = this.props;\n        this.primaryWorkspace = Blockly.inject(\n            this.blocklyDiv.current,\n            {\n                toolbox: this.toolbox.current,\n                ...rest\n            },\n        );\n\n        if (initialXml) {\n            Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(initialXml), this.primaryWorkspace);\n        }\n    }\n\n    get workspace() {\n        return this.primaryWorkspace;\n    }\n\n    setXml(xml) {\n        Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(xml), this.primaryWorkspace);\n    }\n\n    render() {\n        const { children } = this.props;\n\n        return <React.Fragment>\n            <div ref={this.blocklyDiv} id=\"blocklyDiv\" />\n            <xml xmlns=\"https://developers.google.com/blockly/xml\" is=\"blockly\" style={{ display: 'none' }} ref={this.toolbox}>\n                {children}\n            </xml>\n        </React.Fragment>;\n    }\n}\n\nexport default BlocklyComponent;\n"]},"metadata":{},"sourceType":"module"}