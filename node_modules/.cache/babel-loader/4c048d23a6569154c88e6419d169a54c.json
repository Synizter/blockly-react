{"ast":null,"code":"var _jsxFileName = \"/Users/goragodp/Project/blockly-react/src/App.js\";\n\n/**\n * @license\n *\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Main React component that includes the Blockly component.\n * @author samelh@google.com (Sam El-Husseini)\n */\nimport React from 'react';\nimport './App.css';\nimport logo from \"./logo.svg\";\nimport BlocklyComponent, { Block, Value, Field, Shadow } from './Blockly';\nimport BlocklyJS from 'blockly/javascript';\nimport './blocks/customblocks';\nimport './generator/generator';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.generateCode = () => {\n      var code = '';\n      code += 'var actionID = 1;\\n';\n      code += 'var url = \\'https://temi-cmd.firebaseio.com/\\'\\n';\n      code += 'function makeRequest(url,json_content) {\\n\\\n      return new Promise(function (resolve, reject) {\\n\\\n          let xhr = new XMLHttpRequest();\\n\\\n          xhr.open(\\'PUT\\', url,false);\\n\\\n          xhr.setRequestHeader(\\'Content-Type\\', \\'application/json\\');\\n\\\n          xhr.onload = function () {\\n\\\n              if (this.status >= 200 && this.status < 300) {\\n\\\n                  resolve(xhr.response);\\n\\\n              } else {\\n\\\n                  reject({\\n\\\n                      status: this.status,\\n\\\n                      statusText: xhr.statusText\\n\\\n                  });\\n\\\n              }\\n\\\n          };\\n\\\n          xhr.onerror = function () {\\n\\\n              reject({\\n\\\n                  status: this.status,\\n\\\n                  statusText: xhr.statusText\\n\\\n              });\\n\\\n          };\\n\\\n          xhr.send(JSON.stringify(JSON.parse(json_content)));\\n\\\n      });\\n\\\n  }\\n';\n      code += 'async function SendCmd(url, content) {\\n\\\n    var result = await makeRequest(url, content)\\n\\\n    console.log(result);\\n\\\n  }\\n\\n';\n      code += 'SendCmd(url + \"ProgramInfo/status.json\", \\'{\\\"status\\\":\\\"UPLOADING\\\"}\\')\\n';\n      var codeFromBlock = BlocklyJS.workspaceToCode(this.simpleWorkspace.current.workspace);\n      code += codeFromBlock;\n      code += 'SendCmd(url + \"ProgramInfo/status.json\", \\'{\\\"status\\\":\\\"DONE\\\"}\\')\\n'; // code += 'var speak_req = new XMLHttpRequest();\\n';\n      // code += 'var json_content = \\'{\"status\":\"DONE\"}\\';\\n';\n      // code += \"var url = 'https://test-cmd-queue.firebaseio.com/ProgramInfo/status.json';\\n\";\n      // code += \"speak_req.open('PUT', url, true);\\n\";\n      // code += \"speak_req.setRequestHeader('Content-Type', 'application/json');\\n\";\n      // code += 'speak_req.send(JSON.stringify(JSON.parse(json_content)));\\n';\n\n      console.log(code);\n\n      try {\n        eval(code);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.YOUTUBE_API = 'https://www.youtube.com/watch?v=l_Sj1CRqNG8&ab_channel=NoahJ456';\n    this.simpleWorkspace = React.createRef();\n  }\n\n  componentDidMount() {\n    fetch(`${YOUTUBE_API}`).then(response => response.json()).then(responseJson => {\n      if (responseJson && responseJson.items[0]) this.setState({\n        videoId: responseJson.items[0].id.videoId\n      });\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, \" Virach Labo Blockly \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.generateCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, \"Convert\"), /*#__PURE__*/React.createElement(YouTube, {\n      apiKey: API_KEY,\n      videoId: videoId // The YouTube video ID\n      ,\n      showFullscreenButton: true,\n      onReady: e => this.setState({\n        isReady: true\n      }),\n      onChangeState: e => this.setState({\n        status: e.state\n      }),\n      onChangeQuality: e => this.setState({\n        quality: e.quality\n      }),\n      onError: e => this.setState({\n        error: e.error\n      }),\n      style: {\n        height: 300\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(BlocklyComponent, {\n      ref: this.simpleWorkspace,\n      readOnly: false,\n      trashcan: true,\n      media: 'media/',\n      move: {\n        scrollbars: true,\n        drag: true,\n        wheel: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Block, {\n      type: \"robot_action_speak\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Block, {\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Block, {\n      type: \"robot_action_move_forward\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Block, {\n      type: \"robot_action_move_backward\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Block, {\n      type: \"robot_action_move_left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Block, {\n      type: \"robot_action_move_right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Block, {\n      type: \"controls_repeat_ext\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Value, {\n      name: \"TIMES\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Shadow, {\n      type: \"math_number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"NUM\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }, \"10\")))))));\n  }\n\n}\n\nexport default App; // <div className=\"App\">\n// <header className=\"App-header\">\n//   <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//   <button onClick={this.generateCode}>Convert</button>\n//   <BlocklyComponent ref={this.simpleWorkspace}\n//   readOnly={false} trashcan={true} media={'media/'}\n//   move={{\n//     scrollbars: true,\n//     drag: true,\n//     wheel: true\n//   }}\n//   initialXml={`\n// <xml xmlns=\"http://www.w3.org/1999/xhtml\">\n// <block type=\"controls_ifelse\" x=\"0\" y=\"0\"></block>\n// </xml>\n// `}>\n//     <Block type=\"test_react_field\" />\n//     <Block type=\"test_react_date_field\" />\n//     <Block type=\"controls_ifelse\" />\n//     <Block type=\"logic_compare\" />\n//     <Block type=\"logic_operation\" />\n//     <Block type=\"controls_repeat_ext\">\n//       <Value name=\"TIMES\">\n//         <Shadow type=\"math_number\">\n//           <Field name=\"NUM\">10</Field>\n//         </Shadow>\n//       </Value>\n//     </Block>\n//     <Block type=\"logic_operation\" />\n//     <Block type=\"logic_negate\" />\n//     <Block type=\"logic_boolean\" />\n//     <Block type=\"logic_null\" disabled=\"true\" />\n//     <Block type=\"logic_ternary\" />\n//     <Block type=\"text_charAt\">\n//       <Value name=\"VALUE\">\n//         <Block type=\"variables_get\">\n//           <Field name=\"VAR\">text</Field>\n//         </Block>\n//       </Value>\n//     </Block>\n//   </BlocklyComponent>\n// </header>\n// </div>\n// );\n// }\n// }","map":{"version":3,"sources":["/Users/goragodp/Project/blockly-react/src/App.js"],"names":["React","BlocklyComponent","Block","Value","Field","Shadow","BlocklyJS","App","Component","constructor","props","generateCode","code","codeFromBlock","workspaceToCode","simpleWorkspace","current","workspace","console","log","eval","error","YOUTUBE_API","createRef","componentDidMount","fetch","then","response","json","responseJson","items","setState","videoId","id","catch","render","API_KEY","e","isReady","status","state","quality","height","scrollbars","drag","wheel"],"mappings":"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","sourcesContent":["/**\n * @license\n *\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Main React component that includes the Blockly component.\n * @author samelh@google.com (Sam El-Husseini)\n */\n\nimport React from 'react';\nimport './App.css';\n\nimport logo from './logo.svg';\n\nimport BlocklyComponent, { Block, Value, Field, Shadow } from './Blockly';\n\nimport BlocklyJS from 'blockly/javascript';\n\nimport './blocks/customblocks';\nimport './generator/generator';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.simpleWorkspace = React.createRef();\n  }\n\n  generateCode = () => {\n    var code = '';\n    code += 'var actionID = 1;\\n';\n    code += 'var url = \\'https://temi-cmd.firebaseio.com/\\'\\n';\n\n    code += 'function makeRequest(url,json_content) {\\n\\\n      return new Promise(function (resolve, reject) {\\n\\\n          let xhr = new XMLHttpRequest();\\n\\\n          xhr.open(\\'PUT\\', url,false);\\n\\\n          xhr.setRequestHeader(\\'Content-Type\\', \\'application/json\\');\\n\\\n          xhr.onload = function () {\\n\\\n              if (this.status >= 200 && this.status < 300) {\\n\\\n                  resolve(xhr.response);\\n\\\n              } else {\\n\\\n                  reject({\\n\\\n                      status: this.status,\\n\\\n                      statusText: xhr.statusText\\n\\\n                  });\\n\\\n              }\\n\\\n          };\\n\\\n          xhr.onerror = function () {\\n\\\n              reject({\\n\\\n                  status: this.status,\\n\\\n                  statusText: xhr.statusText\\n\\\n              });\\n\\\n          };\\n\\\n          xhr.send(JSON.stringify(JSON.parse(json_content)));\\n\\\n      });\\n\\\n  }\\n';\n  code += 'async function SendCmd(url, content) {\\n\\\n    var result = await makeRequest(url, content)\\n\\\n    console.log(result);\\n\\\n  }\\n\\n';\n  \n  code += 'SendCmd(url + \"ProgramInfo/status.json\", \\'{\\\"status\\\":\\\"UPLOADING\\\"}\\')\\n';\n  var codeFromBlock = BlocklyJS.workspaceToCode(this.simpleWorkspace.current.workspace);\n  code += codeFromBlock;\n  code += 'SendCmd(url + \"ProgramInfo/status.json\", \\'{\\\"status\\\":\\\"DONE\\\"}\\')\\n';\n\n    // code += 'var speak_req = new XMLHttpRequest();\\n';\n    // code += 'var json_content = \\'{\"status\":\"DONE\"}\\';\\n';\n    // code += \"var url = 'https://test-cmd-queue.firebaseio.com/ProgramInfo/status.json';\\n\";\n    // code += \"speak_req.open('PUT', url, true);\\n\";\n    // code += \"speak_req.setRequestHeader('Content-Type', 'application/json');\\n\";\n    // code += 'speak_req.send(JSON.stringify(JSON.parse(json_content)));\\n';\n    console.log(code);\n    try {\n      eval(code);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n\n  YOUTUBE_API = 'https://www.youtube.com/watch?v=l_Sj1CRqNG8&ab_channel=NoahJ456'\n  componentDidMount () {\n    fetch(`${YOUTUBE_API}`)\n      .then((response) => response.json())\n      .then((responseJson) => {\n        if (responseJson && responseJson.items[0]) this.setState({ videoId: responseJson.items[0].id.videoId })\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n          <h1> Virach Labo Blockly </h1>\n          <button onClick={this.generateCode}>Convert</button>\n          {/* lived video */}\n          <YouTube\n              apiKey={API_KEY}\n              videoId={videoId}   // The YouTube video ID\n              showFullscreenButton\n              onReady={e => this.setState({ isReady: true })}\n              onChangeState={e => this.setState({ status: e.state })}\n              onChangeQuality={e => this.setState({ quality: e.quality })}\n              onError={e => this.setState({ error: e.error })}\n              style={{ height: 300 }}\n          />\n          <BlocklyComponent\n            ref={this.simpleWorkspace}\n            readOnly={false}\n            trashcan={true}\n            media={'media/'}\n            move={{\n              scrollbars: true,\n              drag: true,\n              wheel: true,\n            }}\n          >\n            <Block type=\"robot_action_speak\"></Block>\n            <Block type=\"text\"></Block>\n            <Block type=\"robot_action_move_forward\"></Block>\n            <Block type=\"robot_action_move_backward\"></Block>\n            <Block type=\"robot_action_move_left\"></Block>\n            <Block type=\"robot_action_move_right\"></Block>\n            <Block type=\"controls_repeat_ext\">\n              <Value name=\"TIMES\">\n                <Shadow type=\"math_number\">\n                  <Field name=\"NUM\">10</Field>\n                </Shadow>\n              </Value>\n            </Block>\n            {/* DUMMY\n            <Block type=\"controls_ifelse\"></Block>\n            <Block type=\"logic_compare\" />\n            <Block type=\"dm_robot_action_start_cov\"></Block>\n            <Block type=\"dm_robot_intetion\"></Block>\n            <Block type=\"dm_robot_callstaff\"></Block>\n            <Block type=\"dm_robot_show_dir\"></Block> */}\n          </BlocklyComponent>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// <div className=\"App\">\n// <header className=\"App-header\">\n//   <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//   <button onClick={this.generateCode}>Convert</button>\n//   <BlocklyComponent ref={this.simpleWorkspace}\n//   readOnly={false} trashcan={true} media={'media/'}\n//   move={{\n//     scrollbars: true,\n//     drag: true,\n//     wheel: true\n//   }}\n//   initialXml={`\n// <xml xmlns=\"http://www.w3.org/1999/xhtml\">\n// <block type=\"controls_ifelse\" x=\"0\" y=\"0\"></block>\n// </xml>\n// `}>\n//     <Block type=\"test_react_field\" />\n//     <Block type=\"test_react_date_field\" />\n//     <Block type=\"controls_ifelse\" />\n//     <Block type=\"logic_compare\" />\n//     <Block type=\"logic_operation\" />\n//     <Block type=\"controls_repeat_ext\">\n//       <Value name=\"TIMES\">\n//         <Shadow type=\"math_number\">\n//           <Field name=\"NUM\">10</Field>\n//         </Shadow>\n//       </Value>\n//     </Block>\n//     <Block type=\"logic_operation\" />\n//     <Block type=\"logic_negate\" />\n//     <Block type=\"logic_boolean\" />\n//     <Block type=\"logic_null\" disabled=\"true\" />\n//     <Block type=\"logic_ternary\" />\n//     <Block type=\"text_charAt\">\n//       <Value name=\"VALUE\">\n//         <Block type=\"variables_get\">\n//           <Field name=\"VAR\">text</Field>\n//         </Block>\n//       </Value>\n//     </Block>\n//   </BlocklyComponent>\n// </header>\n// </div>\n// );\n// }\n// }\n"]},"metadata":{},"sourceType":"module"}