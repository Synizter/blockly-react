{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Goragod Pongthanisor\\\\Desktop\\\\blockly-react\\\\src\\\\App.js\";\n\n/**\r\n * @license\r\n *\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Main React component that includes the Blockly component.\r\n * @author samelh@google.com (Sam El-Husseini)\r\n */\nimport React from 'react';\nimport './App.css';\nimport logo from \"./logo.svg\";\nimport BlocklyComponent, { Block, Value, Field, Shadow, Category } from './Blockly';\nimport BlocklyJS from 'blockly/javascript';\nimport BlocklyPython from 'blockly/python';\nimport './blocks/customblocks';\nimport './generator/generator';\nimport Axios from 'axios';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.generateCode = () => {\n      // var code = '# start of python program\\n\\n';\n      // //Extract blockly to python, in case of Javascript, use BlocklyJS instead \n      // var codeFromBlock = BlocklyPython.workspaceToCode(this.simpleWorkspace.current.workspace);\n      // code += codeFromBlock;\n      // code += '\\n\\n# end of pythong program\\n';\n      // console.log(code);\n      var codeFromBlock = BlocklyPython.workspaceToCode(this.simpleWorkspace.current.workspace);\n      console.log(codeFromBlock); // Axios.post('http://babyai.org:5000/execute', \"print('hello')\")\n      // .then((res) => {\n      //     console.log(res.data)\n      // }).catch((error) => {\n      //     console.log(error)\n      // });\n\n      Axios('http://babyai.org:5000/execute', {\n        method: 'POST',\n        data: \"print('Hello')\",\n        headers: {\n          // 'Authorization': `bearer ${token}`,\n          'Content-Type': 'text/plain',\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n    };\n\n    this.simpleWorkspace = React.createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.generateCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \"Convert to Python\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Workspace\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"body\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BlocklyComponent, {\n      ref: this.simpleWorkspace,\n      readOnly: false,\n      trashcan: true,\n      media: 'media/',\n      move: {\n        scrollbars: true,\n        drag: true,\n        wheel: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Category, {\n      name: \"Logic\",\n      colour: \"210\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Block, {\n      type: \"controls_if\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Block, {\n      type: \"logic_compare\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Block, {\n      type: \"logic_operation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Block, {\n      type: \"logic_negate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Block, {\n      type: \"logic_boolean\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Category, {\n      name: \"Loops\",\n      colour: \"120\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Block, {\n      type: \"controls_repeat_ext\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Value, {\n      name: \"TIMES\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Block, {\n      type: \"math_number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"NUM\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, \"10\")))), /*#__PURE__*/React.createElement(Block, {\n      type: \"controls_whileUntil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Category, {\n      name: \"Text\",\n      colour: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Block, {\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Block, {\n      type: \"text_length\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Block, {\n      type: \"text_print\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Category, {\n      name: \"Math\",\n      colour: \"230\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Block, {\n      type: \"math_number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Block, {\n      type: \"math_arithmetic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Block, {\n      type: \"math_single\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Category, {\n      name: \"MeCab Japanese Word Segmentation\",\n      colour: \"30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Block, {\n      type: \"ptnlp_word_tokenize_import\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Block, {\n      type: \"ptnlp_tokenize_word\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Block, {\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }))))));\n  }\n\n}\n\nexport default App; // <div className=\"App\">\n// <header className=\"App-header\">\n//   <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//   <button onClick={this.generateCode}>Convert</button>\n//   <BlocklyComponent ref={this.simpleWorkspace}\n//   readOnly={false} trashcan={true} media={'media/'}\n//   move={{\n//     scrollbars: true,\n//     drag: true,\n//     wheel: true\n//   }}\n//   initialXml={`\n// <xml xmlns=\"http://www.w3.org/1999/xhtml\">\n// <block type=\"controls_ifelse\" x=\"0\" y=\"0\"></block>\n// </xml>\n// `}>\n//     <Block type=\"test_react_field\" />\n//     <Block type=\"test_react_date_field\" />\n//     <Block type=\"controls_ifelse\" />\n//     <Block type=\"logic_compare\" />\n//     <Block type=\"logic_operation\" />\n//     <Block type=\"controls_repeat_ext\">\n//       <Value name=\"TIMES\">\n//         <Shadow type=\"math_number\">\n//           <Field name=\"NUM\">10</Field>\n//         </Shadow>\n//       </Value>\n//     </Block>\n//     <Block type=\"logic_operation\" />\n//     <Block type=\"logic_negate\" />\n//     <Block type=\"logic_boolean\" />\n//     <Block type=\"logic_null\" disabled=\"true\" />\n//     <Block type=\"logic_ternary\" />\n//     <Block type=\"text_charAt\">\n//       <Value name=\"VALUE\">\n//         <Block type=\"variables_get\">\n//           <Field name=\"VAR\">text</Field>\n//         </Block>\n//       </Value>\n//     </Block>\n//   </BlocklyComponent>\n// </header>\n// </div>\n// );\n// }\n// }","map":{"version":3,"sources":["C:/Users/Goragod Pongthanisor/Desktop/blockly-react/src/App.js"],"names":["React","BlocklyComponent","Block","Value","Field","Shadow","Category","BlocklyJS","BlocklyPython","Axios","App","Component","constructor","props","generateCode","codeFromBlock","workspaceToCode","simpleWorkspace","current","workspace","console","log","method","data","headers","createRef","render","logo","scrollbars","drag","wheel"],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n *\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * @fileoverview Main React component that includes the Blockly component.\r\n * @author samelh@google.com (Sam El-Husseini)\r\n */\r\n\r\nimport React from 'react';\r\nimport './App.css';\r\n\r\nimport logo from './logo.svg';\r\n\r\nimport BlocklyComponent, { Block, Value, Field, Shadow, Category } from './Blockly';\r\n\r\nimport BlocklyJS from 'blockly/javascript';\r\nimport BlocklyPython from 'blockly/python'\r\n\r\nimport './blocks/customblocks';\r\nimport './generator/generator';\r\nimport Axios from 'axios';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.simpleWorkspace = React.createRef();\r\n  }\r\n\r\n  generateCode = () => {\r\n    // var code = '# start of python program\\n\\n';\r\n    // //Extract blockly to python, in case of Javascript, use BlocklyJS instead \r\n    // var codeFromBlock = BlocklyPython.workspaceToCode(this.simpleWorkspace.current.workspace);\r\n    // code += codeFromBlock;\r\n    // code += '\\n\\n# end of pythong program\\n';\r\n    // console.log(code);\r\n\r\n  var codeFromBlock = BlocklyPython.workspaceToCode(this.simpleWorkspace.current.workspace);\r\n  console.log(codeFromBlock);\r\n\r\n  // Axios.post('http://babyai.org:5000/execute', \"print('hello')\")\r\n  // .then((res) => {\r\n  //     console.log(res.data)\r\n  // }).catch((error) => {\r\n  //     console.log(error)\r\n  // });\r\n  Axios('http://babyai.org:5000/execute',{\r\n   method: 'POST',\r\n   data : \"print('Hello')\",\r\n   headers: {\r\n    // 'Authorization': `bearer ${token}`,\r\n    'Content-Type': 'text/plain',\r\n    'Access-Control-Allow-Origin': '*'\r\n  }\r\n})\r\n};\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <button onClick={this.generateCode}>Convert to Python</button>\r\n\r\n      </header>\r\n      <div className=\"Workspace\">\r\n      <body>\r\n        <BlocklyComponent ref={this.simpleWorkspace}\r\n          readOnly={false} trashcan={true} media={'media/'}\r\n          move={{\r\n            scrollbars: true,\r\n            drag: true,\r\n            wheel: true\r\n          }}>\r\n\r\n            <Category name=\"Logic\" colour=\"210\">\r\n              <Block type=\"controls_if\"></Block>\r\n              <Block type=\"logic_compare\"></Block>\r\n              <Block type=\"logic_operation\"></Block>\r\n              <Block type=\"logic_negate\"></Block>\r\n              <Block type=\"logic_boolean\"></Block>\r\n            </Category>\r\n            <Category name=\"Loops\" colour=\"120\">\r\n              <Block type=\"controls_repeat_ext\">\r\n                <Value name=\"TIMES\">\r\n                  <Block type=\"math_number\">\r\n                    <Field name=\"NUM\">10</Field>\r\n                  </Block>\r\n                    </Value></Block>\r\n              <Block type=\"controls_whileUntil\"></Block>\r\n            </Category>\r\n            <Category name=\"Text\" colour=\"20\">\r\n              <Block type=\"text\"></Block>\r\n              <Block type=\"text_length\"></Block>\r\n              <Block type=\"text_print\"></Block>\r\n            </Category>\r\n            <Category name=\"Math\" colour=\"230\">\r\n              <Block type=\"math_number\"></Block>\r\n              <Block type=\"math_arithmetic\"></Block>\r\n              <Block type=\"math_single\"></Block>\r\n            </Category>\r\n\r\n            <Category name=\"MeCab Japanese Word Segmentation\" colour=\"30\">\r\n              <Block type=\"ptnlp_word_tokenize_import\"></Block>\r\n              <Block type=\"ptnlp_tokenize_word\"></Block> \r\n              <Block type=\"text\"></Block>\r\n            </Category>\r\n\r\n          </BlocklyComponent>\r\n      </body>\r\n      </div>\r\n      </div>\r\n      \r\n      );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n// <div className=\"App\">\r\n// <header className=\"App-header\">\r\n//   <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n//   <button onClick={this.generateCode}>Convert</button>\r\n//   <BlocklyComponent ref={this.simpleWorkspace}\r\n//   readOnly={false} trashcan={true} media={'media/'}\r\n//   move={{\r\n//     scrollbars: true,\r\n//     drag: true,\r\n//     wheel: true\r\n//   }}\r\n//   initialXml={`\r\n// <xml xmlns=\"http://www.w3.org/1999/xhtml\">\r\n// <block type=\"controls_ifelse\" x=\"0\" y=\"0\"></block>\r\n// </xml>\r\n// `}>\r\n//     <Block type=\"test_react_field\" />\r\n//     <Block type=\"test_react_date_field\" />\r\n//     <Block type=\"controls_ifelse\" />\r\n//     <Block type=\"logic_compare\" />\r\n//     <Block type=\"logic_operation\" />\r\n//     <Block type=\"controls_repeat_ext\">\r\n//       <Value name=\"TIMES\">\r\n//         <Shadow type=\"math_number\">\r\n//           <Field name=\"NUM\">10</Field>\r\n//         </Shadow>\r\n//       </Value>\r\n//     </Block>\r\n//     <Block type=\"logic_operation\" />\r\n//     <Block type=\"logic_negate\" />\r\n//     <Block type=\"logic_boolean\" />\r\n//     <Block type=\"logic_null\" disabled=\"true\" />\r\n//     <Block type=\"logic_ternary\" />\r\n//     <Block type=\"text_charAt\">\r\n//       <Value name=\"VALUE\">\r\n//         <Block type=\"variables_get\">\r\n//           <Field name=\"VAR\">text</Field>\r\n//         </Block>\r\n//       </Value>\r\n//     </Block>\r\n//   </BlocklyComponent>\r\n// </header>\r\n// </div>\r\n// );\r\n// }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}