{"ast":null,"code":"/* eslint-disable */\n;\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['./blockly'], factory);\n  } else if (typeof exports === 'object') {\n    // Node.js\n    module.exports = factory(require('./blockly'));\n  } else {\n    // Browser\n    root.Blockly = factory(root.Blockly);\n  }\n})(this, function (Blockly) {\n  /**\r\n   * @license\r\n   * Copyright 2019 Google LLC\r\n   *\r\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   * you may not use this file except in compliance with the License.\r\n   * You may obtain a copy of the License at\r\n   *\r\n   *   http://www.apache.org/licenses/LICENSE-2.0\r\n   *\r\n   * Unless required by applicable law or agreed to in writing, software\r\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   * See the License for the specific language governing permissions and\r\n   * limitations under the License.\r\n   */\n\n  /**\r\n   * @fileoverview Blockly core module for the browser. It includes blockly.js\r\n   *               and adds a helper method for setting the locale.\r\n   */\n\n  /* eslint-disable */\n  'use strict'; // Add a helper method to set the Blockly locale.\n\n  Blockly.setLocale = function (locale) {\n    Blockly.Msg = Blockly.Msg || {};\n    Object.keys(locale).forEach(function (k) {\n      Blockly.Msg[k] = locale[k];\n    });\n  };\n\n  return Blockly;\n});","map":{"version":3,"sources":["C:/Users/Goragod Pongthanisor/Desktop/blockly-react/node_modules/blockly/core-browser.js"],"names":["root","factory","define","amd","exports","module","require","Blockly","setLocale","locale","Msg","Object","keys","forEach","k"],"mappings":"AAAA;AACA;;AAAE,WAASA,IAAT,EAAeC,OAAf,EAAwB;AACxB,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AAAE;AAChDD,IAAAA,MAAM,CAAC,CAAC,WAAD,CAAD,EAAgBD,OAAhB,CAAN;AACD,GAFD,MAEO,IAAI,OAAOG,OAAP,KAAmB,QAAvB,EAAiC;AAAE;AACxCC,IAAAA,MAAM,CAACD,OAAP,GAAiBH,OAAO,CAACK,OAAO,CAAC,WAAD,CAAR,CAAxB;AACD,GAFM,MAEA;AAAE;AACPN,IAAAA,IAAI,CAACO,OAAL,GAAeN,OAAO,CAACD,IAAI,CAACO,OAAN,CAAtB;AACD;AACF,CARC,EAQA,IARA,EAQM,UAASA,OAAT,EAAkB;AAC1B;;;;;;;;;;;;;;;;;AAiBA;;;;;AAKA;AACA,eAxB0B,CA0B1B;;AACAA,EAAAA,OAAO,CAACC,SAAR,GAAoB,UAAUC,MAAV,EAAkB;AACpCF,IAAAA,OAAO,CAACG,GAAR,GAAcH,OAAO,CAACG,GAAR,IAAe,EAA7B;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,OAApB,CAA4B,UAAUC,CAAV,EAAa;AACvCP,MAAAA,OAAO,CAACG,GAAR,CAAYI,CAAZ,IAAiBL,MAAM,CAACK,CAAD,CAAvB;AACD,KAFD;AAGD,GALD;;AAOA,SAAOP,OAAP;AACC,CA3CC,CAAD","sourcesContent":["/* eslint-disable */\r\n;(function(root, factory) {\r\n  if (typeof define === 'function' && define.amd) { // AMD\r\n    define(['./blockly'], factory);\r\n  } else if (typeof exports === 'object') { // Node.js\r\n    module.exports = factory(require('./blockly'));\r\n  } else { // Browser\r\n    root.Blockly = factory(root.Blockly);\r\n  }\r\n}(this, function(Blockly) {\r\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * @fileoverview Blockly core module for the browser. It includes blockly.js\r\n *               and adds a helper method for setting the locale.\r\n */\r\n\r\n/* eslint-disable */\r\n'use strict';\r\n\r\n// Add a helper method to set the Blockly locale.\r\nBlockly.setLocale = function (locale) {\r\n  Blockly.Msg = Blockly.Msg || {};\r\n  Object.keys(locale).forEach(function (k) {\r\n    Blockly.Msg[k] = locale[k];\r\n  });\r\n};\r\n\r\nreturn Blockly;\r\n})); \r\n"]},"metadata":{},"sourceType":"script"}