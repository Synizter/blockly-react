{"ast":null,"code":"/* eslint-disable */\n;\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['./core'], factory);\n  } else if (typeof exports === 'object') {\n    // Node.js\n    module.exports = factory(require('./core'));\n  } else {\n    // Browser\n    root.Blockly.Python = factory(root.Blockly);\n  }\n})(this, function (Blockly) {\n  // Do not edit this file; automatically generated by gulp.\n  'use strict';\n\n  Blockly.Python = new Blockly.Generator(\"Python\");\n  Blockly.Python.addReservedWords(\"False,None,True,and,as,assert,break,class,continue,def,del,elif,else,except,exec,finally,for,from,global,if,import,in,is,lambda,nonlocal,not,or,pass,print,raise,return,try,while,with,yield,NotImplemented,Ellipsis,__debug__,quit,exit,copyright,license,credits,ArithmeticError,AssertionError,AttributeError,BaseException,BlockingIOError,BrokenPipeError,BufferError,BytesWarning,ChildProcessError,ConnectionAbortedError,ConnectionError,ConnectionRefusedError,ConnectionResetError,DeprecationWarning,EOFError,Ellipsis,EnvironmentError,Exception,FileExistsError,FileNotFoundError,FloatingPointError,FutureWarning,GeneratorExit,IOError,ImportError,ImportWarning,IndentationError,IndexError,InterruptedError,IsADirectoryError,KeyError,KeyboardInterrupt,LookupError,MemoryError,ModuleNotFoundError,NameError,NotADirectoryError,NotImplemented,NotImplementedError,OSError,OverflowError,PendingDeprecationWarning,PermissionError,ProcessLookupError,RecursionError,ReferenceError,ResourceWarning,RuntimeError,RuntimeWarning,StandardError,StopAsyncIteration,StopIteration,SyntaxError,SyntaxWarning,SystemError,SystemExit,TabError,TimeoutError,TypeError,UnboundLocalError,UnicodeDecodeError,UnicodeEncodeError,UnicodeError,UnicodeTranslateError,UnicodeWarning,UserWarning,ValueError,Warning,ZeroDivisionError,_,__build_class__,__debug__,__doc__,__import__,__loader__,__name__,__package__,__spec__,abs,all,any,apply,ascii,basestring,bin,bool,buffer,bytearray,bytes,callable,chr,classmethod,cmp,coerce,compile,complex,copyright,credits,delattr,dict,dir,divmod,enumerate,eval,exec,execfile,exit,file,filter,float,format,frozenset,getattr,globals,hasattr,hash,help,hex,id,input,int,intern,isinstance,issubclass,iter,len,license,list,locals,long,map,max,memoryview,min,next,object,oct,open,ord,pow,print,property,quit,range,raw_input,reduce,reload,repr,reversed,round,set,setattr,slice,sorted,staticmethod,str,sum,super,tuple,type,unichr,unicode,vars,xrange,zip\");\n  Blockly.Python.ORDER_ATOMIC = 0;\n  Blockly.Python.ORDER_COLLECTION = 1;\n  Blockly.Python.ORDER_STRING_CONVERSION = 1;\n  Blockly.Python.ORDER_MEMBER = 2.1;\n  Blockly.Python.ORDER_FUNCTION_CALL = 2.2;\n  Blockly.Python.ORDER_EXPONENTIATION = 3;\n  Blockly.Python.ORDER_UNARY_SIGN = 4;\n  Blockly.Python.ORDER_BITWISE_NOT = 4;\n  Blockly.Python.ORDER_MULTIPLICATIVE = 5;\n  Blockly.Python.ORDER_ADDITIVE = 6;\n  Blockly.Python.ORDER_BITWISE_SHIFT = 7;\n  Blockly.Python.ORDER_BITWISE_AND = 8;\n  Blockly.Python.ORDER_BITWISE_XOR = 9;\n  Blockly.Python.ORDER_BITWISE_OR = 10;\n  Blockly.Python.ORDER_RELATIONAL = 11;\n  Blockly.Python.ORDER_LOGICAL_NOT = 12;\n  Blockly.Python.ORDER_LOGICAL_AND = 13;\n  Blockly.Python.ORDER_LOGICAL_OR = 14;\n  Blockly.Python.ORDER_CONDITIONAL = 15;\n  Blockly.Python.ORDER_LAMBDA = 16;\n  Blockly.Python.ORDER_NONE = 99;\n  Blockly.Python.ORDER_OVERRIDES = [[Blockly.Python.ORDER_FUNCTION_CALL, Blockly.Python.ORDER_MEMBER], [Blockly.Python.ORDER_FUNCTION_CALL, Blockly.Python.ORDER_FUNCTION_CALL], [Blockly.Python.ORDER_MEMBER, Blockly.Python.ORDER_MEMBER], [Blockly.Python.ORDER_MEMBER, Blockly.Python.ORDER_FUNCTION_CALL], [Blockly.Python.ORDER_LOGICAL_NOT, Blockly.Python.ORDER_LOGICAL_NOT], [Blockly.Python.ORDER_LOGICAL_AND, Blockly.Python.ORDER_LOGICAL_AND], [Blockly.Python.ORDER_LOGICAL_OR, Blockly.Python.ORDER_LOGICAL_OR]];\n\n  Blockly.Python.init = function (a) {\n    Blockly.Python.PASS = this.INDENT + \"pass\\n\";\n    Blockly.Python.definitions_ = Object.create(null);\n    Blockly.Python.functionNames_ = Object.create(null);\n    Blockly.Python.variableDB_ ? Blockly.Python.variableDB_.reset() : Blockly.Python.variableDB_ = new Blockly.Names(Blockly.Python.RESERVED_WORDS_);\n    Blockly.Python.variableDB_.setVariableMap(a.getVariableMap());\n\n    for (var b = [], c = Blockly.Variables.allDeveloperVariables(a), d = 0; d < c.length; d++) b.push(Blockly.Python.variableDB_.getName(c[d], Blockly.Names.DEVELOPER_VARIABLE_TYPE) + \" = None\");\n\n    a = Blockly.Variables.allUsedVarModels(a);\n\n    for (d = 0; d < a.length; d++) b.push(Blockly.Python.variableDB_.getName(a[d].getId(), Blockly.VARIABLE_CATEGORY_NAME) + \" = None\");\n\n    Blockly.Python.definitions_.variables = b.join(\"\\n\");\n  };\n\n  Blockly.Python.finish = function (a) {\n    var b = [],\n        c = [],\n        d;\n\n    for (d in Blockly.Python.definitions_) {\n      var e = Blockly.Python.definitions_[d];\n      e.match(/^(from\\s+\\S+\\s+)?import\\s+\\S+/) ? b.push(e) : c.push(e);\n    }\n\n    delete Blockly.Python.definitions_;\n    delete Blockly.Python.functionNames_;\n    Blockly.Python.variableDB_.reset();\n    return (b.join(\"\\n\") + \"\\n\\n\" + c.join(\"\\n\\n\")).replace(/\\n\\n+/g, \"\\n\\n\").replace(/\\n*$/, \"\\n\\n\\n\") + a;\n  };\n\n  Blockly.Python.scrubNakedValue = function (a) {\n    return a + \"\\n\";\n  };\n\n  Blockly.Python.quote_ = function (a) {\n    a = a.replace(/\\\\/g, \"\\\\\\\\\").replace(/\\n/g, \"\\\\\\n\");\n    var b = \"'\";\n    -1 !== a.indexOf(\"'\") && (-1 === a.indexOf('\"') ? b = '\"' : a = a.replace(/'/g, \"\\\\'\"));\n    return b + a + b;\n  };\n\n  Blockly.Python.multiline_quote_ = function (a) {\n    a = a.replace(/'''/g, \"\\\\'\\\\'\\\\'\");\n    return \"'''\" + a + \"'''\";\n  };\n\n  Blockly.Python.scrub_ = function (a, b, c) {\n    var d = \"\";\n\n    if (!a.outputConnection || !a.outputConnection.targetConnection) {\n      var e = a.getCommentText();\n      e && (e = Blockly.utils.string.wrap(e, Blockly.Python.COMMENT_WRAP - 3), d += Blockly.Python.prefixLines(e + \"\\n\", \"# \"));\n\n      for (var f = 0; f < a.inputList.length; f++) a.inputList[f].type == Blockly.INPUT_VALUE && (e = a.inputList[f].connection.targetBlock()) && (e = Blockly.Python.allNestedComments(e)) && (d += Blockly.Python.prefixLines(e, \"# \"));\n    }\n\n    a = a.nextConnection && a.nextConnection.targetBlock();\n    c = c ? \"\" : Blockly.Python.blockToCode(a);\n    return d + b + c;\n  };\n\n  Blockly.Python.getAdjustedInt = function (a, b, c, d) {\n    c = c || 0;\n    a.workspace.options.oneBasedIndex && c--;\n    var e = a.workspace.options.oneBasedIndex ? \"1\" : \"0\";\n    a = Blockly.Python.valueToCode(a, b, c ? Blockly.Python.ORDER_ADDITIVE : Blockly.Python.ORDER_NONE) || e;\n    Blockly.isNumber(a) ? (a = parseInt(a, 10) + c, d && (a = -a)) : (a = 0 < c ? \"int(\" + a + \" + \" + c + \")\" : 0 > c ? \"int(\" + a + \" - \" + -c + \")\" : \"int(\" + a + \")\", d && (a = \"-\" + a));\n    return a;\n  };\n\n  Blockly.Python.colour = {};\n\n  Blockly.Python.colour_picker = function (a) {\n    return [Blockly.Python.quote_(a.getFieldValue(\"COLOUR\")), Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Blockly.Python.colour_random = function (a) {\n    Blockly.Python.definitions_.import_random = \"import random\";\n    return [\"'#%06x' % random.randint(0, 2**24 - 1)\", Blockly.Python.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.Python.colour_rgb = function (a) {\n    var b = Blockly.Python.provideFunction_(\"colour_rgb\", [\"def \" + Blockly.Python.FUNCTION_NAME_PLACEHOLDER_ + \"(r, g, b):\", \"  r = round(min(100, max(0, r)) * 2.55)\", \"  g = round(min(100, max(0, g)) * 2.55)\", \"  b = round(min(100, max(0, b)) * 2.55)\", \"  return '#%02x%02x%02x' % (r, g, b)\"]),\n        c = Blockly.Python.valueToCode(a, \"RED\", Blockly.Python.ORDER_NONE) || 0,\n        d = Blockly.Python.valueToCode(a, \"GREEN\", Blockly.Python.ORDER_NONE) || 0;\n    a = Blockly.Python.valueToCode(a, \"BLUE\", Blockly.Python.ORDER_NONE) || 0;\n    return [b + \"(\" + c + \", \" + d + \", \" + a + \")\", Blockly.Python.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.Python.colour_blend = function (a) {\n    var b = Blockly.Python.provideFunction_(\"colour_blend\", [\"def \" + Blockly.Python.FUNCTION_NAME_PLACEHOLDER_ + \"(colour1, colour2, ratio):\", \"  r1, r2 = int(colour1[1:3], 16), int(colour2[1:3], 16)\", \"  g1, g2 = int(colour1[3:5], 16), int(colour2[3:5], 16)\", \"  b1, b2 = int(colour1[5:7], 16), int(colour2[5:7], 16)\", \"  ratio = min(1, max(0, ratio))\", \"  r = round(r1 * (1 - ratio) + r2 * ratio)\", \"  g = round(g1 * (1 - ratio) + g2 * ratio)\", \"  b = round(b1 * (1 - ratio) + b2 * ratio)\", \"  return '#%02x%02x%02x' % (r, g, b)\"]),\n        c = Blockly.Python.valueToCode(a, \"COLOUR1\", Blockly.Python.ORDER_NONE) || \"'#000000'\",\n        d = Blockly.Python.valueToCode(a, \"COLOUR2\", Blockly.Python.ORDER_NONE) || \"'#000000'\";\n    a = Blockly.Python.valueToCode(a, \"RATIO\", Blockly.Python.ORDER_NONE) || 0;\n    return [b + \"(\" + c + \", \" + d + \", \" + a + \")\", Blockly.Python.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.Python.lists = {};\n\n  Blockly.Python.lists_create_empty = function (a) {\n    return [\"[]\", Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Blockly.Python.lists_create_with = function (a) {\n    for (var b = Array(a.itemCount_), c = 0; c < a.itemCount_; c++) b[c] = Blockly.Python.valueToCode(a, \"ADD\" + c, Blockly.Python.ORDER_NONE) || \"None\";\n\n    return [\"[\" + b.join(\", \") + \"]\", Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Blockly.Python.lists_repeat = function (a) {\n    var b = Blockly.Python.valueToCode(a, \"ITEM\", Blockly.Python.ORDER_NONE) || \"None\";\n    a = Blockly.Python.valueToCode(a, \"NUM\", Blockly.Python.ORDER_MULTIPLICATIVE) || \"0\";\n    return [\"[\" + b + \"] * \" + a, Blockly.Python.ORDER_MULTIPLICATIVE];\n  };\n\n  Blockly.Python.lists_length = function (a) {\n    return [\"len(\" + (Blockly.Python.valueToCode(a, \"VALUE\", Blockly.Python.ORDER_NONE) || \"[]\") + \")\", Blockly.Python.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.Python.lists_isEmpty = function (a) {\n    return [\"not len(\" + (Blockly.Python.valueToCode(a, \"VALUE\", Blockly.Python.ORDER_NONE) || \"[]\") + \")\", Blockly.Python.ORDER_LOGICAL_NOT];\n  };\n\n  Blockly.Python.lists_indexOf = function (a) {\n    var b = Blockly.Python.valueToCode(a, \"FIND\", Blockly.Python.ORDER_NONE) || \"[]\",\n        c = Blockly.Python.valueToCode(a, \"VALUE\", Blockly.Python.ORDER_NONE) || \"''\";\n    if (a.workspace.options.oneBasedIndex) var d = \" 0\",\n        e = \" + 1\",\n        f = \"\";else d = \" -1\", e = \"\", f = \" - 1\";\n    if (\"FIRST\" == a.getFieldValue(\"END\")) return a = Blockly.Python.provideFunction_(\"first_index\", [\"def \" + Blockly.Python.FUNCTION_NAME_PLACEHOLDER_ + \"(my_list, elem):\", \"  try: index = my_list.index(elem)\" + e, \"  except: index =\" + d, \"  return index\"]), [a + \"(\" + c + \", \" + b + \")\", Blockly.Python.ORDER_FUNCTION_CALL];\n    a = Blockly.Python.provideFunction_(\"last_index\", [\"def \" + Blockly.Python.FUNCTION_NAME_PLACEHOLDER_ + \"(my_list, elem):\", \"  try: index = len(my_list) - my_list[::-1].index(elem)\" + f, \"  except: index =\" + d, \"  return index\"]);\n    return [a + \"(\" + c + \", \" + b + \")\", Blockly.Python.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.Python.lists_getIndex = function (a) {\n    var b = a.getFieldValue(\"MODE\") || \"GET\",\n        c = a.getFieldValue(\"WHERE\") || \"FROM_START\",\n        d = Blockly.Python.valueToCode(a, \"VALUE\", \"RANDOM\" == c ? Blockly.Python.ORDER_NONE : Blockly.Python.ORDER_MEMBER) || \"[]\";\n\n    switch (c) {\n      case \"FIRST\":\n        if (\"GET\" == b) return [d + \"[0]\", Blockly.Python.ORDER_MEMBER];\n        if (\"GET_REMOVE\" == b) return [d + \".pop(0)\", Blockly.Python.ORDER_FUNCTION_CALL];\n        if (\"REMOVE\" == b) return d + \".pop(0)\\n\";\n        break;\n\n      case \"LAST\":\n        if (\"GET\" == b) return [d + \"[-1]\", Blockly.Python.ORDER_MEMBER];\n        if (\"GET_REMOVE\" == b) return [d + \".pop()\", Blockly.Python.ORDER_FUNCTION_CALL];\n        if (\"REMOVE\" == b) return d + \".pop()\\n\";\n        break;\n\n      case \"FROM_START\":\n        a = Blockly.Python.getAdjustedInt(a, \"AT\");\n        if (\"GET\" == b) return [d + \"[\" + a + \"]\", Blockly.Python.ORDER_MEMBER];\n        if (\"GET_REMOVE\" == b) return [d + \".pop(\" + a + \")\", Blockly.Python.ORDER_FUNCTION_CALL];\n        if (\"REMOVE\" == b) return d + \".pop(\" + a + \")\\n\";\n        break;\n\n      case \"FROM_END\":\n        a = Blockly.Python.getAdjustedInt(a, \"AT\", 1, !0);\n        if (\"GET\" == b) return [d + \"[\" + a + \"]\", Blockly.Python.ORDER_MEMBER];\n        if (\"GET_REMOVE\" == b) return [d + \".pop(\" + a + \")\", Blockly.Python.ORDER_FUNCTION_CALL];\n        if (\"REMOVE\" == b) return d + \".pop(\" + a + \")\\n\";\n        break;\n\n      case \"RANDOM\":\n        Blockly.Python.definitions_.import_random = \"import random\";\n        if (\"GET\" == b) return [\"random.choice(\" + d + \")\", Blockly.Python.ORDER_FUNCTION_CALL];\n        d = Blockly.Python.provideFunction_(\"lists_remove_random_item\", [\"def \" + Blockly.Python.FUNCTION_NAME_PLACEHOLDER_ + \"(myList):\", \"  x = int(random.random() * len(myList))\", \"  return myList.pop(x)\"]) + \"(\" + d + \")\";\n        if (\"GET_REMOVE\" == b) return [d, Blockly.Python.ORDER_FUNCTION_CALL];\n        if (\"REMOVE\" == b) return d + \"\\n\";\n    }\n\n    throw Error(\"Unhandled combination (lists_getIndex).\");\n  };\n\n  Blockly.Python.lists_setIndex = function (a) {\n    var b = Blockly.Python.valueToCode(a, \"LIST\", Blockly.Python.ORDER_MEMBER) || \"[]\",\n        c = a.getFieldValue(\"MODE\") || \"GET\",\n        d = a.getFieldValue(\"WHERE\") || \"FROM_START\",\n        e = Blockly.Python.valueToCode(a, \"TO\", Blockly.Python.ORDER_NONE) || \"None\";\n\n    switch (d) {\n      case \"FIRST\":\n        if (\"SET\" == c) return b + \"[0] = \" + e + \"\\n\";\n        if (\"INSERT\" == c) return b + \".insert(0, \" + e + \")\\n\";\n        break;\n\n      case \"LAST\":\n        if (\"SET\" == c) return b + \"[-1] = \" + e + \"\\n\";\n        if (\"INSERT\" == c) return b + \".append(\" + e + \")\\n\";\n        break;\n\n      case \"FROM_START\":\n        a = Blockly.Python.getAdjustedInt(a, \"AT\");\n        if (\"SET\" == c) return b + \"[\" + a + \"] = \" + e + \"\\n\";\n        if (\"INSERT\" == c) return b + \".insert(\" + a + \", \" + e + \")\\n\";\n        break;\n\n      case \"FROM_END\":\n        a = Blockly.Python.getAdjustedInt(a, \"AT\", 1, !0);\n        if (\"SET\" == c) return b + \"[\" + a + \"] = \" + e + \"\\n\";\n        if (\"INSERT\" == c) return b + \".insert(\" + a + \", \" + e + \")\\n\";\n        break;\n\n      case \"RANDOM\":\n        Blockly.Python.definitions_.import_random = \"import random\";\n        b.match(/^\\w+$/) ? a = \"\" : (a = Blockly.Python.variableDB_.getDistinctName(\"tmp_list\", Blockly.VARIABLE_CATEGORY_NAME), d = a + \" = \" + b + \"\\n\", b = a, a = d);\n        d = Blockly.Python.variableDB_.getDistinctName(\"tmp_x\", Blockly.VARIABLE_CATEGORY_NAME);\n        a += d + \" = int(random.random() * len(\" + b + \"))\\n\";\n        if (\"SET\" == c) return a + (b + \"[\" + d + \"] = \" + e + \"\\n\");\n        if (\"INSERT\" == c) return a + (b + \".insert(\" + d + \", \" + e + \")\\n\");\n    }\n\n    throw Error(\"Unhandled combination (lists_setIndex).\");\n  };\n\n  Blockly.Python.lists_getSublist = function (a) {\n    var b = Blockly.Python.valueToCode(a, \"LIST\", Blockly.Python.ORDER_MEMBER) || \"[]\",\n        c = a.getFieldValue(\"WHERE1\"),\n        d = a.getFieldValue(\"WHERE2\");\n\n    switch (c) {\n      case \"FROM_START\":\n        c = Blockly.Python.getAdjustedInt(a, \"AT1\");\n        \"0\" == c && (c = \"\");\n        break;\n\n      case \"FROM_END\":\n        c = Blockly.Python.getAdjustedInt(a, \"AT1\", 1, !0);\n        break;\n\n      case \"FIRST\":\n        c = \"\";\n        break;\n\n      default:\n        throw Error(\"Unhandled option (lists_getSublist)\");\n    }\n\n    switch (d) {\n      case \"FROM_START\":\n        a = Blockly.Python.getAdjustedInt(a, \"AT2\", 1);\n        break;\n\n      case \"FROM_END\":\n        a = Blockly.Python.getAdjustedInt(a, \"AT2\", 0, !0);\n        Blockly.isNumber(String(a)) ? \"0\" == a && (a = \"\") : (Blockly.Python.definitions_.import_sys = \"import sys\", a += \" or sys.maxsize\");\n        break;\n\n      case \"LAST\":\n        a = \"\";\n        break;\n\n      default:\n        throw Error(\"Unhandled option (lists_getSublist)\");\n    }\n\n    return [b + \"[\" + c + \" : \" + a + \"]\", Blockly.Python.ORDER_MEMBER];\n  };\n\n  Blockly.Python.lists_sort = function (a) {\n    var b = Blockly.Python.valueToCode(a, \"LIST\", Blockly.Python.ORDER_NONE) || \"[]\",\n        c = a.getFieldValue(\"TYPE\");\n    a = \"1\" === a.getFieldValue(\"DIRECTION\") ? \"False\" : \"True\";\n    return [Blockly.Python.provideFunction_(\"lists_sort\", [\"def \" + Blockly.Python.FUNCTION_NAME_PLACEHOLDER_ + \"(my_list, type, reverse):\", \"  def try_float(s):\", \"    try:\", \"      return float(s)\", \"    except:\", \"      return 0\", \"  key_funcs = {\", '    \"NUMERIC\": try_float,', '    \"TEXT\": str,', '    \"IGNORE_CASE\": lambda s: str(s).lower()', \"  }\", \"  key_func = key_funcs[type]\", \"  list_cpy = list(my_list)\", \"  return sorted(list_cpy, key=key_func, reverse=reverse)\"]) + \"(\" + b + ', \"' + c + '\", ' + a + \")\", Blockly.Python.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.Python.lists_split = function (a) {\n    var b = a.getFieldValue(\"MODE\");\n    if (\"SPLIT\" == b) b = Blockly.Python.valueToCode(a, \"INPUT\", Blockly.Python.ORDER_MEMBER) || \"''\", a = Blockly.Python.valueToCode(a, \"DELIM\", Blockly.Python.ORDER_NONE), a = b + \".split(\" + a + \")\";else if (\"JOIN\" == b) b = Blockly.Python.valueToCode(a, \"INPUT\", Blockly.Python.ORDER_NONE) || \"[]\", a = Blockly.Python.valueToCode(a, \"DELIM\", Blockly.Python.ORDER_MEMBER) || \"''\", a = a + \".join(\" + b + \")\";else throw Error(\"Unknown mode: \" + b);\n    return [a, Blockly.Python.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.Python.lists_reverse = function (a) {\n    return [\"list(reversed(\" + (Blockly.Python.valueToCode(a, \"LIST\", Blockly.Python.ORDER_NONE) || \"[]\") + \"))\", Blockly.Python.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.Python.logic = {};\n\n  Blockly.Python.controls_if = function (a) {\n    var b = 0,\n        c = \"\";\n    Blockly.Python.STATEMENT_PREFIX && (c += Blockly.Python.injectId(Blockly.Python.STATEMENT_PREFIX, a));\n\n    do {\n      var d = Blockly.Python.valueToCode(a, \"IF\" + b, Blockly.Python.ORDER_NONE) || \"False\";\n      var e = Blockly.Python.statementToCode(a, \"DO\" + b) || Blockly.Python.PASS;\n      Blockly.Python.STATEMENT_SUFFIX && (e = Blockly.Python.prefixLines(Blockly.Python.injectId(Blockly.Python.STATEMENT_SUFFIX, a), Blockly.Python.INDENT) + e);\n      c += (0 == b ? \"if \" : \"elif \") + d + \":\\n\" + e;\n      ++b;\n    } while (a.getInput(\"IF\" + b));\n\n    if (a.getInput(\"ELSE\") || Blockly.Python.STATEMENT_SUFFIX) e = Blockly.Python.statementToCode(a, \"ELSE\") || Blockly.Python.PASS, Blockly.Python.STATEMENT_SUFFIX && (e = Blockly.Python.prefixLines(Blockly.Python.injectId(Blockly.Python.STATEMENT_SUFFIX, a), Blockly.Python.INDENT) + e), c += \"else:\\n\" + e;\n    return c;\n  };\n\n  Blockly.Python.controls_ifelse = Blockly.Python.controls_if;\n\n  Blockly.Python.logic_compare = function (a) {\n    var b = {\n      EQ: \"==\",\n      NEQ: \"!=\",\n      LT: \"<\",\n      LTE: \"<=\",\n      GT: \">\",\n      GTE: \">=\"\n    }[a.getFieldValue(\"OP\")],\n        c = Blockly.Python.ORDER_RELATIONAL,\n        d = Blockly.Python.valueToCode(a, \"A\", c) || \"0\";\n    a = Blockly.Python.valueToCode(a, \"B\", c) || \"0\";\n    return [d + \" \" + b + \" \" + a, c];\n  };\n\n  Blockly.Python.logic_operation = function (a) {\n    var b = \"AND\" == a.getFieldValue(\"OP\") ? \"and\" : \"or\",\n        c = \"and\" == b ? Blockly.Python.ORDER_LOGICAL_AND : Blockly.Python.ORDER_LOGICAL_OR,\n        d = Blockly.Python.valueToCode(a, \"A\", c);\n    a = Blockly.Python.valueToCode(a, \"B\", c);\n\n    if (d || a) {\n      var e = \"and\" == b ? \"True\" : \"False\";\n      d || (d = e);\n      a || (a = e);\n    } else a = d = \"False\";\n\n    return [d + \" \" + b + \" \" + a, c];\n  };\n\n  Blockly.Python.logic_negate = function (a) {\n    return [\"not \" + (Blockly.Python.valueToCode(a, \"BOOL\", Blockly.Python.ORDER_LOGICAL_NOT) || \"True\"), Blockly.Python.ORDER_LOGICAL_NOT];\n  };\n\n  Blockly.Python.logic_boolean = function (a) {\n    return [\"TRUE\" == a.getFieldValue(\"BOOL\") ? \"True\" : \"False\", Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Blockly.Python.logic_null = function (a) {\n    return [\"None\", Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Blockly.Python.logic_ternary = function (a) {\n    var b = Blockly.Python.valueToCode(a, \"IF\", Blockly.Python.ORDER_CONDITIONAL) || \"False\",\n        c = Blockly.Python.valueToCode(a, \"THEN\", Blockly.Python.ORDER_CONDITIONAL) || \"None\";\n    a = Blockly.Python.valueToCode(a, \"ELSE\", Blockly.Python.ORDER_CONDITIONAL) || \"None\";\n    return [c + \" if \" + b + \" else \" + a, Blockly.Python.ORDER_CONDITIONAL];\n  };\n\n  Blockly.Python.loops = {};\n\n  Blockly.Python.controls_repeat_ext = function (a) {\n    var b = a.getField(\"TIMES\") ? String(parseInt(a.getFieldValue(\"TIMES\"), 10)) : Blockly.Python.valueToCode(a, \"TIMES\", Blockly.Python.ORDER_NONE) || \"0\";\n    b = Blockly.isNumber(b) ? parseInt(b, 10) : \"int(\" + b + \")\";\n    var c = Blockly.Python.statementToCode(a, \"DO\");\n    c = Blockly.Python.addLoopTrap(c, a) || Blockly.Python.PASS;\n    return \"for \" + Blockly.Python.variableDB_.getDistinctName(\"count\", Blockly.VARIABLE_CATEGORY_NAME) + \" in range(\" + b + \"):\\n\" + c;\n  };\n\n  Blockly.Python.controls_repeat = Blockly.Python.controls_repeat_ext;\n\n  Blockly.Python.controls_whileUntil = function (a) {\n    var b = \"UNTIL\" == a.getFieldValue(\"MODE\"),\n        c = Blockly.Python.valueToCode(a, \"BOOL\", b ? Blockly.Python.ORDER_LOGICAL_NOT : Blockly.Python.ORDER_NONE) || \"False\",\n        d = Blockly.Python.statementToCode(a, \"DO\");\n    d = Blockly.Python.addLoopTrap(d, a) || Blockly.Python.PASS;\n    b && (c = \"not \" + c);\n    return \"while \" + c + \":\\n\" + d;\n  };\n\n  Blockly.Python.controls_for = function (a) {\n    var b = Blockly.Python.variableDB_.getName(a.getFieldValue(\"VAR\"), Blockly.VARIABLE_CATEGORY_NAME),\n        c = Blockly.Python.valueToCode(a, \"FROM\", Blockly.Python.ORDER_NONE) || \"0\",\n        d = Blockly.Python.valueToCode(a, \"TO\", Blockly.Python.ORDER_NONE) || \"0\",\n        e = Blockly.Python.valueToCode(a, \"BY\", Blockly.Python.ORDER_NONE) || \"1\",\n        f = Blockly.Python.statementToCode(a, \"DO\");\n    f = Blockly.Python.addLoopTrap(f, a) || Blockly.Python.PASS;\n\n    var h = \"\",\n        g = function () {\n      return Blockly.Python.provideFunction_(\"upRange\", [\"def \" + Blockly.Python.FUNCTION_NAME_PLACEHOLDER_ + \"(start, stop, step):\", \"  while start <= stop:\", \"    yield start\", \"    start += abs(step)\"]);\n    },\n        k = function () {\n      return Blockly.Python.provideFunction_(\"downRange\", [\"def \" + Blockly.Python.FUNCTION_NAME_PLACEHOLDER_ + \"(start, stop, step):\", \"  while start >= stop:\", \"    yield start\", \"    start -= abs(step)\"]);\n    };\n\n    a = function (a, b, c) {\n      return \"(\" + a + \" <= \" + b + \") and \" + g() + \"(\" + a + \", \" + b + \", \" + c + \") or \" + k() + \"(\" + a + \", \" + b + \", \" + c + \")\";\n    };\n\n    if (Blockly.isNumber(c) && Blockly.isNumber(d) && Blockly.isNumber(e)) c = Number(c), d = Number(d), e = Math.abs(Number(e)), 0 === c % 1 && 0 === d % 1 && 0 === e % 1 ? (c <= d ? (d++, a = 0 == c && 1 == e ? d : c + \", \" + d, 1 != e && (a += \", \" + e)) : (d--, a = c + \", \" + d + \", -\" + e), a = \"range(\" + a + \")\") : (a = c < d ? g() : k(), a += \"(\" + c + \", \" + d + \", \" + e + \")\");else {\n      var l = function (a, c) {\n        Blockly.isNumber(a) ? a = Number(a) : a.match(/^\\w+$/) ? a = \"float(\" + a + \")\" : (c = Blockly.Python.variableDB_.getDistinctName(b + c, Blockly.VARIABLE_CATEGORY_NAME), h += c + \" = float(\" + a + \")\\n\", a = c);\n        return a;\n      };\n\n      c = l(c, \"_start\");\n      d = l(d, \"_end\");\n      l(e, \"_inc\");\n      a = \"number\" == typeof c && \"number\" == typeof d ? c < d ? g(c, d, e) : k(c, d, e) : a(c, d, e);\n    }\n    return h += \"for \" + b + \" in \" + a + \":\\n\" + f;\n  };\n\n  Blockly.Python.controls_forEach = function (a) {\n    var b = Blockly.Python.variableDB_.getName(a.getFieldValue(\"VAR\"), Blockly.VARIABLE_CATEGORY_NAME),\n        c = Blockly.Python.valueToCode(a, \"LIST\", Blockly.Python.ORDER_RELATIONAL) || \"[]\",\n        d = Blockly.Python.statementToCode(a, \"DO\");\n    d = Blockly.Python.addLoopTrap(d, a) || Blockly.Python.PASS;\n    return \"for \" + b + \" in \" + c + \":\\n\" + d;\n  };\n\n  Blockly.Python.controls_flow_statements = function (a) {\n    var b = \"\";\n    Blockly.Python.STATEMENT_PREFIX && (b += Blockly.Python.injectId(Blockly.Python.STATEMENT_PREFIX, a));\n    Blockly.Python.STATEMENT_SUFFIX && (b += Blockly.Python.injectId(Blockly.Python.STATEMENT_SUFFIX, a));\n\n    if (Blockly.Python.STATEMENT_PREFIX) {\n      var c = Blockly.Constants.Loops.CONTROL_FLOW_IN_LOOP_CHECK_MIXIN.getSurroundLoop(a);\n      c && !c.suppressPrefixSuffix && (b += Blockly.Python.injectId(Blockly.Python.STATEMENT_PREFIX, c));\n    }\n\n    switch (a.getFieldValue(\"FLOW\")) {\n      case \"BREAK\":\n        return b + \"break\\n\";\n\n      case \"CONTINUE\":\n        return b + \"continue\\n\";\n    }\n\n    throw Error(\"Unknown flow statement.\");\n  };\n\n  Blockly.Python.math = {};\n  Blockly.Python.addReservedWords(\"math,random,Number\");\n\n  Blockly.Python.math_number = function (a) {\n    a = Number(a.getFieldValue(\"NUM\"));\n\n    if (Infinity == a) {\n      a = 'float(\"inf\")';\n      var b = Blockly.Python.ORDER_FUNCTION_CALL;\n    } else -Infinity == a ? (a = '-float(\"inf\")', b = Blockly.Python.ORDER_UNARY_SIGN) : b = 0 > a ? Blockly.Python.ORDER_UNARY_SIGN : Blockly.Python.ORDER_ATOMIC;\n\n    return [a, b];\n  };\n\n  Blockly.Python.math_arithmetic = function (a) {\n    var b = {\n      ADD: [\" + \", Blockly.Python.ORDER_ADDITIVE],\n      MINUS: [\" - \", Blockly.Python.ORDER_ADDITIVE],\n      MULTIPLY: [\" * \", Blockly.Python.ORDER_MULTIPLICATIVE],\n      DIVIDE: [\" / \", Blockly.Python.ORDER_MULTIPLICATIVE],\n      POWER: [\" ** \", Blockly.Python.ORDER_EXPONENTIATION]\n    }[a.getFieldValue(\"OP\")],\n        c = b[0];\n    b = b[1];\n    var d = Blockly.Python.valueToCode(a, \"A\", b) || \"0\";\n    a = Blockly.Python.valueToCode(a, \"B\", b) || \"0\";\n    return [d + c + a, b];\n  };\n\n  Blockly.Python.math_single = function (a) {\n    var b = a.getFieldValue(\"OP\");\n\n    if (\"NEG\" == b) {\n      var c = Blockly.Python.valueToCode(a, \"NUM\", Blockly.Python.ORDER_UNARY_SIGN) || \"0\";\n      return [\"-\" + c, Blockly.Python.ORDER_UNARY_SIGN];\n    }\n\n    Blockly.Python.definitions_.import_math = \"import math\";\n    a = \"SIN\" == b || \"COS\" == b || \"TAN\" == b ? Blockly.Python.valueToCode(a, \"NUM\", Blockly.Python.ORDER_MULTIPLICATIVE) || \"0\" : Blockly.Python.valueToCode(a, \"NUM\", Blockly.Python.ORDER_NONE) || \"0\";\n\n    switch (b) {\n      case \"ABS\":\n        c = \"math.fabs(\" + a + \")\";\n        break;\n\n      case \"ROOT\":\n        c = \"math.sqrt(\" + a + \")\";\n        break;\n\n      case \"LN\":\n        c = \"math.log(\" + a + \")\";\n        break;\n\n      case \"LOG10\":\n        c = \"math.log10(\" + a + \")\";\n        break;\n\n      case \"EXP\":\n        c = \"math.exp(\" + a + \")\";\n        break;\n\n      case \"POW10\":\n        c = \"math.pow(10,\" + a + \")\";\n        break;\n\n      case \"ROUND\":\n        c = \"round(\" + a + \")\";\n        break;\n\n      case \"ROUNDUP\":\n        c = \"math.ceil(\" + a + \")\";\n        break;\n\n      case \"ROUNDDOWN\":\n        c = \"math.floor(\" + a + \")\";\n        break;\n\n      case \"SIN\":\n        c = \"math.sin(\" + a + \" / 180.0 * math.pi)\";\n        break;\n\n      case \"COS\":\n        c = \"math.cos(\" + a + \" / 180.0 * math.pi)\";\n        break;\n\n      case \"TAN\":\n        c = \"math.tan(\" + a + \" / 180.0 * math.pi)\";\n    }\n\n    if (c) return [c, Blockly.Python.ORDER_FUNCTION_CALL];\n\n    switch (b) {\n      case \"ASIN\":\n        c = \"math.asin(\" + a + \") / math.pi * 180\";\n        break;\n\n      case \"ACOS\":\n        c = \"math.acos(\" + a + \") / math.pi * 180\";\n        break;\n\n      case \"ATAN\":\n        c = \"math.atan(\" + a + \") / math.pi * 180\";\n        break;\n\n      default:\n        throw Error(\"Unknown math operator: \" + b);\n    }\n\n    return [c, Blockly.Python.ORDER_MULTIPLICATIVE];\n  };\n\n  Blockly.Python.math_constant = function (a) {\n    var b = {\n      PI: [\"math.pi\", Blockly.Python.ORDER_MEMBER],\n      E: [\"math.e\", Blockly.Python.ORDER_MEMBER],\n      GOLDEN_RATIO: [\"(1 + math.sqrt(5)) / 2\", Blockly.Python.ORDER_MULTIPLICATIVE],\n      SQRT2: [\"math.sqrt(2)\", Blockly.Python.ORDER_MEMBER],\n      SQRT1_2: [\"math.sqrt(1.0 / 2)\", Blockly.Python.ORDER_MEMBER],\n      INFINITY: [\"float('inf')\", Blockly.Python.ORDER_ATOMIC]\n    };\n    a = a.getFieldValue(\"CONSTANT\");\n    \"INFINITY\" != a && (Blockly.Python.definitions_.import_math = \"import math\");\n    return b[a];\n  };\n\n  Blockly.Python.math_number_property = function (a) {\n    var b = Blockly.Python.valueToCode(a, \"NUMBER_TO_CHECK\", Blockly.Python.ORDER_MULTIPLICATIVE) || \"0\",\n        c = a.getFieldValue(\"PROPERTY\");\n    if (\"PRIME\" == c) return Blockly.Python.definitions_.import_math = \"import math\", Blockly.Python.definitions_.from_numbers_import_Number = \"from numbers import Number\", [Blockly.Python.provideFunction_(\"math_isPrime\", [\"def \" + Blockly.Python.FUNCTION_NAME_PLACEHOLDER_ + \"(n):\", \"  # https://en.wikipedia.org/wiki/Primality_test#Naive_methods\", \"  # If n is not a number but a string, try parsing it.\", \"  if not isinstance(n, Number):\", \"    try:\", \"      n = float(n)\", \"    except:\", \"      return False\", \"  if n == 2 or n == 3:\", \"    return True\", \"  # False if n is negative, is 1, or not whole, or if n is divisible by 2 or 3.\", \"  if n <= 1 or n % 1 != 0 or n % 2 == 0 or n % 3 == 0:\", \"    return False\", \"  # Check all the numbers of form 6k +/- 1, up to sqrt(n).\", \"  for x in range(6, int(math.sqrt(n)) + 2, 6):\", \"    if n % (x - 1) == 0 or n % (x + 1) == 0:\", \"      return False\", \"  return True\"]) + \"(\" + b + \")\", Blockly.Python.ORDER_FUNCTION_CALL];\n\n    switch (c) {\n      case \"EVEN\":\n        var d = b + \" % 2 == 0\";\n        break;\n\n      case \"ODD\":\n        d = b + \" % 2 == 1\";\n        break;\n\n      case \"WHOLE\":\n        d = b + \" % 1 == 0\";\n        break;\n\n      case \"POSITIVE\":\n        d = b + \" > 0\";\n        break;\n\n      case \"NEGATIVE\":\n        d = b + \" < 0\";\n        break;\n\n      case \"DIVISIBLE_BY\":\n        a = Blockly.Python.valueToCode(a, \"DIVISOR\", Blockly.Python.ORDER_MULTIPLICATIVE);\n        if (!a || \"0\" == a) return [\"False\", Blockly.Python.ORDER_ATOMIC];\n        d = b + \" % \" + a + \" == 0\";\n    }\n\n    return [d, Blockly.Python.ORDER_RELATIONAL];\n  };\n\n  Blockly.Python.math_change = function (a) {\n    Blockly.Python.definitions_.from_numbers_import_Number = \"from numbers import Number\";\n    var b = Blockly.Python.valueToCode(a, \"DELTA\", Blockly.Python.ORDER_ADDITIVE) || \"0\";\n    a = Blockly.Python.variableDB_.getName(a.getFieldValue(\"VAR\"), Blockly.VARIABLE_CATEGORY_NAME);\n    return a + \" = (\" + a + \" if isinstance(\" + a + \", Number) else 0) + \" + b + \"\\n\";\n  };\n\n  Blockly.Python.math_round = Blockly.Python.math_single;\n  Blockly.Python.math_trig = Blockly.Python.math_single;\n\n  Blockly.Python.math_on_list = function (a) {\n    var b = a.getFieldValue(\"OP\");\n    a = Blockly.Python.valueToCode(a, \"LIST\", Blockly.Python.ORDER_NONE) || \"[]\";\n\n    switch (b) {\n      case \"SUM\":\n        b = \"sum(\" + a + \")\";\n        break;\n\n      case \"MIN\":\n        b = \"min(\" + a + \")\";\n        break;\n\n      case \"MAX\":\n        b = \"max(\" + a + \")\";\n        break;\n\n      case \"AVERAGE\":\n        Blockly.Python.definitions_.from_numbers_import_Number = \"from numbers import Number\";\n        b = Blockly.Python.provideFunction_(\"math_mean\", [\"def \" + Blockly.Python.FUNCTION_NAME_PLACEHOLDER_ + \"(myList):\", \"  localList = [e for e in myList if isinstance(e, Number)]\", \"  if not localList: return\", \"  return float(sum(localList)) / len(localList)\"]);\n        b = b + \"(\" + a + \")\";\n        break;\n\n      case \"MEDIAN\":\n        Blockly.Python.definitions_.from_numbers_import_Number = \"from numbers import Number\";\n        b = Blockly.Python.provideFunction_(\"math_median\", [\"def \" + Blockly.Python.FUNCTION_NAME_PLACEHOLDER_ + \"(myList):\", \"  localList = sorted([e for e in myList if isinstance(e, Number)])\", \"  if not localList: return\", \"  if len(localList) % 2 == 0:\", \"    return (localList[len(localList) // 2 - 1] + localList[len(localList) // 2]) / 2.0\", \"  else:\", \"    return localList[(len(localList) - 1) // 2]\"]);\n        b = b + \"(\" + a + \")\";\n        break;\n\n      case \"MODE\":\n        b = Blockly.Python.provideFunction_(\"math_modes\", [\"def \" + Blockly.Python.FUNCTION_NAME_PLACEHOLDER_ + \"(some_list):\", \"  modes = []\", \"  # Using a lists of [item, count] to keep count rather than dict\", '  # to avoid \"unhashable\" errors when the counted item is itself a list or dict.', \"  counts = []\", \"  maxCount = 1\", \"  for item in some_list:\", \"    found = False\", \"    for count in counts:\", \"      if count[0] == item:\", \"        count[1] += 1\", \"        maxCount = max(maxCount, count[1])\", \"        found = True\", \"    if not found:\", \"      counts.append([item, 1])\", \"  for counted_item, item_count in counts:\", \"    if item_count == maxCount:\", \"      modes.append(counted_item)\", \"  return modes\"]);\n        b = b + \"(\" + a + \")\";\n        break;\n\n      case \"STD_DEV\":\n        Blockly.Python.definitions_.import_math = \"import math\";\n        b = Blockly.Python.provideFunction_(\"math_standard_deviation\", [\"def \" + Blockly.Python.FUNCTION_NAME_PLACEHOLDER_ + \"(numbers):\", \"  n = len(numbers)\", \"  if n == 0: return\", \"  mean = float(sum(numbers)) / n\", \"  variance = sum((x - mean) ** 2 for x in numbers) / n\", \"  return math.sqrt(variance)\"]);\n        b = b + \"(\" + a + \")\";\n        break;\n\n      case \"RANDOM\":\n        Blockly.Python.definitions_.import_random = \"import random\";\n        b = \"random.choice(\" + a + \")\";\n        break;\n\n      default:\n        throw Error(\"Unknown operator: \" + b);\n    }\n\n    return [b, Blockly.Python.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.Python.math_modulo = function (a) {\n    var b = Blockly.Python.valueToCode(a, \"DIVIDEND\", Blockly.Python.ORDER_MULTIPLICATIVE) || \"0\";\n    a = Blockly.Python.valueToCode(a, \"DIVISOR\", Blockly.Python.ORDER_MULTIPLICATIVE) || \"0\";\n    return [b + \" % \" + a, Blockly.Python.ORDER_MULTIPLICATIVE];\n  };\n\n  Blockly.Python.math_constrain = function (a) {\n    var b = Blockly.Python.valueToCode(a, \"VALUE\", Blockly.Python.ORDER_NONE) || \"0\",\n        c = Blockly.Python.valueToCode(a, \"LOW\", Blockly.Python.ORDER_NONE) || \"0\";\n    a = Blockly.Python.valueToCode(a, \"HIGH\", Blockly.Python.ORDER_NONE) || \"float('inf')\";\n    return [\"min(max(\" + b + \", \" + c + \"), \" + a + \")\", Blockly.Python.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.Python.math_random_int = function (a) {\n    Blockly.Python.definitions_.import_random = \"import random\";\n    var b = Blockly.Python.valueToCode(a, \"FROM\", Blockly.Python.ORDER_NONE) || \"0\";\n    a = Blockly.Python.valueToCode(a, \"TO\", Blockly.Python.ORDER_NONE) || \"0\";\n    return [\"random.randint(\" + b + \", \" + a + \")\", Blockly.Python.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.Python.math_random_float = function (a) {\n    Blockly.Python.definitions_.import_random = \"import random\";\n    return [\"random.random()\", Blockly.Python.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.Python.math_atan2 = function (a) {\n    Blockly.Python.definitions_.import_math = \"import math\";\n    var b = Blockly.Python.valueToCode(a, \"X\", Blockly.Python.ORDER_NONE) || \"0\";\n    return [\"math.atan2(\" + (Blockly.Python.valueToCode(a, \"Y\", Blockly.Python.ORDER_NONE) || \"0\") + \", \" + b + \") / math.pi * 180\", Blockly.Python.ORDER_MULTIPLICATIVE];\n  };\n\n  Blockly.Python.procedures = {};\n\n  Blockly.Python.procedures_defreturn = function (a) {\n    for (var b = [], c, d = a.workspace, e = Blockly.Variables.allUsedVarModels(d) || [], f = 0; c = e[f]; f++) c = c.name, -1 == a.arguments_.indexOf(c) && b.push(Blockly.Python.variableDB_.getName(c, Blockly.VARIABLE_CATEGORY_NAME));\n\n    d = Blockly.Variables.allDeveloperVariables(d);\n\n    for (f = 0; f < d.length; f++) b.push(Blockly.Python.variableDB_.getName(d[f], Blockly.Names.DEVELOPER_VARIABLE_TYPE));\n\n    b = b.length ? Blockly.Python.INDENT + \"global \" + b.join(\", \") + \"\\n\" : \"\";\n    d = Blockly.Python.variableDB_.getName(a.getFieldValue(\"NAME\"), Blockly.PROCEDURE_CATEGORY_NAME);\n    e = \"\";\n    Blockly.Python.STATEMENT_PREFIX && (e += Blockly.Python.injectId(Blockly.Python.STATEMENT_PREFIX, a));\n    Blockly.Python.STATEMENT_SUFFIX && (e += Blockly.Python.injectId(Blockly.Python.STATEMENT_SUFFIX, a));\n    e && (e = Blockly.Python.prefixLines(e, Blockly.Python.INDENT));\n    c = \"\";\n    Blockly.Python.INFINITE_LOOP_TRAP && (c = Blockly.Python.prefixLines(Blockly.Python.injectId(Blockly.Python.INFINITE_LOOP_TRAP, a), Blockly.Python.INDENT));\n    var h = Blockly.Python.statementToCode(a, \"STACK\"),\n        g = Blockly.Python.valueToCode(a, \"RETURN\", Blockly.Python.ORDER_NONE) || \"\",\n        k = \"\";\n    h && g && (k = e);\n    g ? g = Blockly.Python.INDENT + \"return \" + g + \"\\n\" : h || (h = Blockly.Python.PASS);\n    var l = [];\n\n    for (f = 0; f < a.arguments_.length; f++) l[f] = Blockly.Python.variableDB_.getName(a.arguments_[f], Blockly.VARIABLE_CATEGORY_NAME);\n\n    b = \"def \" + d + \"(\" + l.join(\", \") + \"):\\n\" + b + e + c + h + k + g;\n    b = Blockly.Python.scrub_(a, b);\n    Blockly.Python.definitions_[\"%\" + d] = b;\n    return null;\n  };\n\n  Blockly.Python.procedures_defnoreturn = Blockly.Python.procedures_defreturn;\n\n  Blockly.Python.procedures_callreturn = function (a) {\n    for (var b = Blockly.Python.variableDB_.getName(a.getFieldValue(\"NAME\"), Blockly.PROCEDURE_CATEGORY_NAME), c = [], d = 0; d < a.arguments_.length; d++) c[d] = Blockly.Python.valueToCode(a, \"ARG\" + d, Blockly.Python.ORDER_NONE) || \"None\";\n\n    return [b + \"(\" + c.join(\", \") + \")\", Blockly.Python.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.Python.procedures_callnoreturn = function (a) {\n    return Blockly.Python.procedures_callreturn(a)[0] + \"\\n\";\n  };\n\n  Blockly.Python.procedures_ifreturn = function (a) {\n    var b = \"if \" + (Blockly.Python.valueToCode(a, \"CONDITION\", Blockly.Python.ORDER_NONE) || \"False\") + \":\\n\";\n    Blockly.Python.STATEMENT_SUFFIX && (b += Blockly.Python.prefixLines(Blockly.Python.injectId(Blockly.Python.STATEMENT_SUFFIX, a), Blockly.Python.INDENT));\n    a.hasReturnValue_ ? (a = Blockly.Python.valueToCode(a, \"VALUE\", Blockly.Python.ORDER_NONE) || \"None\", b += Blockly.Python.INDENT + \"return \" + a + \"\\n\") : b += Blockly.Python.INDENT + \"return\\n\";\n    return b;\n  };\n\n  Blockly.Python.texts = {};\n\n  Blockly.Python.text = function (a) {\n    return [Blockly.Python.quote_(a.getFieldValue(\"TEXT\")), Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Blockly.Python.text_multiline = function (a) {\n    return [Blockly.Python.multiline_quote_(a.getFieldValue(\"TEXT\")), Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Blockly.Python.text.forceString_ = function (a) {\n    return Blockly.Python.text.forceString_.strRegExp.test(a) ? a : \"str(\" + a + \")\";\n  };\n\n  Blockly.Python.text.forceString_.strRegExp = /^\\s*'([^']|\\\\')*'\\s*$/;\n\n  Blockly.Python.text_join = function (a) {\n    switch (a.itemCount_) {\n      case 0:\n        return [\"''\", Blockly.Python.ORDER_ATOMIC];\n\n      case 1:\n        return a = Blockly.Python.valueToCode(a, \"ADD0\", Blockly.Python.ORDER_NONE) || \"''\", a = Blockly.Python.text.forceString_(a), [a, Blockly.Python.ORDER_FUNCTION_CALL];\n\n      case 2:\n        var b = Blockly.Python.valueToCode(a, \"ADD0\", Blockly.Python.ORDER_NONE) || \"''\";\n        a = Blockly.Python.valueToCode(a, \"ADD1\", Blockly.Python.ORDER_NONE) || \"''\";\n        a = Blockly.Python.text.forceString_(b) + \" + \" + Blockly.Python.text.forceString_(a);\n        return [a, Blockly.Python.ORDER_ADDITIVE];\n\n      default:\n        b = [];\n\n        for (var c = 0; c < a.itemCount_; c++) b[c] = Blockly.Python.valueToCode(a, \"ADD\" + c, Blockly.Python.ORDER_NONE) || \"''\";\n\n        a = Blockly.Python.variableDB_.getDistinctName(\"x\", Blockly.VARIABLE_CATEGORY_NAME);\n        a = \"''.join([str(\" + a + \") for \" + a + \" in [\" + b.join(\", \") + \"]])\";\n        return [a, Blockly.Python.ORDER_FUNCTION_CALL];\n    }\n  };\n\n  Blockly.Python.text_append = function (a) {\n    var b = Blockly.Python.variableDB_.getName(a.getFieldValue(\"VAR\"), Blockly.VARIABLE_CATEGORY_NAME);\n    a = Blockly.Python.valueToCode(a, \"TEXT\", Blockly.Python.ORDER_NONE) || \"''\";\n    return b + \" = str(\" + b + \") + \" + Blockly.Python.text.forceString_(a) + \"\\n\";\n  };\n\n  Blockly.Python.text_length = function (a) {\n    return [\"len(\" + (Blockly.Python.valueToCode(a, \"VALUE\", Blockly.Python.ORDER_NONE) || \"''\") + \")\", Blockly.Python.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.Python.text_isEmpty = function (a) {\n    return [\"not len(\" + (Blockly.Python.valueToCode(a, \"VALUE\", Blockly.Python.ORDER_NONE) || \"''\") + \")\", Blockly.Python.ORDER_LOGICAL_NOT];\n  };\n\n  Blockly.Python.text_indexOf = function (a) {\n    var b = \"FIRST\" == a.getFieldValue(\"END\") ? \"find\" : \"rfind\",\n        c = Blockly.Python.valueToCode(a, \"FIND\", Blockly.Python.ORDER_NONE) || \"''\";\n    b = (Blockly.Python.valueToCode(a, \"VALUE\", Blockly.Python.ORDER_MEMBER) || \"''\") + \".\" + b + \"(\" + c + \")\";\n    return a.workspace.options.oneBasedIndex ? [b + \" + 1\", Blockly.Python.ORDER_ADDITIVE] : [b, Blockly.Python.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.Python.text_charAt = function (a) {\n    var b = a.getFieldValue(\"WHERE\") || \"FROM_START\",\n        c = Blockly.Python.valueToCode(a, \"VALUE\", Blockly.Python.ORDER_MEMBER) || \"''\";\n\n    switch (b) {\n      case \"FIRST\":\n        return [c + \"[0]\", Blockly.Python.ORDER_MEMBER];\n\n      case \"LAST\":\n        return [c + \"[-1]\", Blockly.Python.ORDER_MEMBER];\n\n      case \"FROM_START\":\n        return a = Blockly.Python.getAdjustedInt(a, \"AT\"), [c + \"[\" + a + \"]\", Blockly.Python.ORDER_MEMBER];\n\n      case \"FROM_END\":\n        return a = Blockly.Python.getAdjustedInt(a, \"AT\", 1, !0), [c + \"[\" + a + \"]\", Blockly.Python.ORDER_MEMBER];\n\n      case \"RANDOM\":\n        return Blockly.Python.definitions_.import_random = \"import random\", [Blockly.Python.provideFunction_(\"text_random_letter\", [\"def \" + Blockly.Python.FUNCTION_NAME_PLACEHOLDER_ + \"(text):\", \"  x = int(random.random() * len(text))\", \"  return text[x];\"]) + \"(\" + c + \")\", Blockly.Python.ORDER_FUNCTION_CALL];\n    }\n\n    throw Error(\"Unhandled option (text_charAt).\");\n  };\n\n  Blockly.Python.text_getSubstring = function (a) {\n    var b = a.getFieldValue(\"WHERE1\"),\n        c = a.getFieldValue(\"WHERE2\"),\n        d = Blockly.Python.valueToCode(a, \"STRING\", Blockly.Python.ORDER_MEMBER) || \"''\";\n\n    switch (b) {\n      case \"FROM_START\":\n        b = Blockly.Python.getAdjustedInt(a, \"AT1\");\n        \"0\" == b && (b = \"\");\n        break;\n\n      case \"FROM_END\":\n        b = Blockly.Python.getAdjustedInt(a, \"AT1\", 1, !0);\n        break;\n\n      case \"FIRST\":\n        b = \"\";\n        break;\n\n      default:\n        throw Error(\"Unhandled option (text_getSubstring)\");\n    }\n\n    switch (c) {\n      case \"FROM_START\":\n        a = Blockly.Python.getAdjustedInt(a, \"AT2\", 1);\n        break;\n\n      case \"FROM_END\":\n        a = Blockly.Python.getAdjustedInt(a, \"AT2\", 0, !0);\n        Blockly.isNumber(String(a)) ? \"0\" == a && (a = \"\") : (Blockly.Python.definitions_.import_sys = \"import sys\", a += \" or sys.maxsize\");\n        break;\n\n      case \"LAST\":\n        a = \"\";\n        break;\n\n      default:\n        throw Error(\"Unhandled option (text_getSubstring)\");\n    }\n\n    return [d + \"[\" + b + \" : \" + a + \"]\", Blockly.Python.ORDER_MEMBER];\n  };\n\n  Blockly.Python.text_changeCase = function (a) {\n    var b = {\n      UPPERCASE: \".upper()\",\n      LOWERCASE: \".lower()\",\n      TITLECASE: \".title()\"\n    }[a.getFieldValue(\"CASE\")];\n    return [(Blockly.Python.valueToCode(a, \"TEXT\", Blockly.Python.ORDER_MEMBER) || \"''\") + b, Blockly.Python.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.Python.text_trim = function (a) {\n    var b = {\n      LEFT: \".lstrip()\",\n      RIGHT: \".rstrip()\",\n      BOTH: \".strip()\"\n    }[a.getFieldValue(\"MODE\")];\n    return [(Blockly.Python.valueToCode(a, \"TEXT\", Blockly.Python.ORDER_MEMBER) || \"''\") + b, Blockly.Python.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.Python.text_print = function (a) {\n    return \"print(\" + (Blockly.Python.valueToCode(a, \"TEXT\", Blockly.Python.ORDER_NONE) || \"''\") + \")\\n\";\n  };\n\n  Blockly.Python.text_prompt_ext = function (a) {\n    var b = Blockly.Python.provideFunction_(\"text_prompt\", [\"def \" + Blockly.Python.FUNCTION_NAME_PLACEHOLDER_ + \"(msg):\", \"  try:\", \"    return raw_input(msg)\", \"  except NameError:\", \"    return input(msg)\"]),\n        c = a.getField(\"TEXT\") ? Blockly.Python.quote_(a.getFieldValue(\"TEXT\")) : Blockly.Python.valueToCode(a, \"TEXT\", Blockly.Python.ORDER_NONE) || \"''\";\n    b = b + \"(\" + c + \")\";\n    \"NUMBER\" == a.getFieldValue(\"TYPE\") && (b = \"float(\" + b + \")\");\n    return [b, Blockly.Python.ORDER_FUNCTION_CALL];\n  };\n\n  Blockly.Python.text_prompt = Blockly.Python.text_prompt_ext;\n\n  Blockly.Python.text_count = function (a) {\n    var b = Blockly.Python.valueToCode(a, \"TEXT\", Blockly.Python.ORDER_MEMBER) || \"''\";\n    a = Blockly.Python.valueToCode(a, \"SUB\", Blockly.Python.ORDER_NONE) || \"''\";\n    return [b + \".count(\" + a + \")\", Blockly.Python.ORDER_MEMBER];\n  };\n\n  Blockly.Python.text_replace = function (a) {\n    var b = Blockly.Python.valueToCode(a, \"TEXT\", Blockly.Python.ORDER_MEMBER) || \"''\",\n        c = Blockly.Python.valueToCode(a, \"FROM\", Blockly.Python.ORDER_NONE) || \"''\";\n    a = Blockly.Python.valueToCode(a, \"TO\", Blockly.Python.ORDER_NONE) || \"''\";\n    return [b + \".replace(\" + c + \", \" + a + \")\", Blockly.Python.ORDER_MEMBER];\n  };\n\n  Blockly.Python.text_reverse = function (a) {\n    return [(Blockly.Python.valueToCode(a, \"TEXT\", Blockly.Python.ORDER_MEMBER) || \"''\") + \"[::-1]\", Blockly.Python.ORDER_MEMBER];\n  };\n\n  Blockly.Python.variables = {};\n\n  Blockly.Python.variables_get = function (a) {\n    return [Blockly.Python.variableDB_.getName(a.getFieldValue(\"VAR\"), Blockly.VARIABLE_CATEGORY_NAME), Blockly.Python.ORDER_ATOMIC];\n  };\n\n  Blockly.Python.variables_set = function (a) {\n    var b = Blockly.Python.valueToCode(a, \"VALUE\", Blockly.Python.ORDER_NONE) || \"0\";\n    return Blockly.Python.variableDB_.getName(a.getFieldValue(\"VAR\"), Blockly.VARIABLE_CATEGORY_NAME) + \" = \" + b + \"\\n\";\n  };\n\n  Blockly.Python.variablesDynamic = {};\n  Blockly.Python.variables_get_dynamic = Blockly.Python.variables_get;\n  Blockly.Python.variables_set_dynamic = Blockly.Python.variables_set;\n  return Blockly.Python;\n});","map":{"version":3,"sources":["C:/Users/Goragod Pongthanisor/Desktop/blockly-react/node_modules/blockly/python.js"],"names":["root","factory","define","amd","exports","module","require","Blockly","Python","Generator","addReservedWords","ORDER_ATOMIC","ORDER_COLLECTION","ORDER_STRING_CONVERSION","ORDER_MEMBER","ORDER_FUNCTION_CALL","ORDER_EXPONENTIATION","ORDER_UNARY_SIGN","ORDER_BITWISE_NOT","ORDER_MULTIPLICATIVE","ORDER_ADDITIVE","ORDER_BITWISE_SHIFT","ORDER_BITWISE_AND","ORDER_BITWISE_XOR","ORDER_BITWISE_OR","ORDER_RELATIONAL","ORDER_LOGICAL_NOT","ORDER_LOGICAL_AND","ORDER_LOGICAL_OR","ORDER_CONDITIONAL","ORDER_LAMBDA","ORDER_NONE","ORDER_OVERRIDES","init","a","PASS","INDENT","definitions_","Object","create","functionNames_","variableDB_","reset","Names","RESERVED_WORDS_","setVariableMap","getVariableMap","b","c","Variables","allDeveloperVariables","d","length","push","getName","DEVELOPER_VARIABLE_TYPE","allUsedVarModels","getId","VARIABLE_CATEGORY_NAME","variables","join","finish","e","match","replace","scrubNakedValue","quote_","indexOf","multiline_quote_","scrub_","outputConnection","targetConnection","getCommentText","utils","string","wrap","COMMENT_WRAP","prefixLines","f","inputList","type","INPUT_VALUE","connection","targetBlock","allNestedComments","nextConnection","blockToCode","getAdjustedInt","workspace","options","oneBasedIndex","valueToCode","isNumber","parseInt","colour","colour_picker","getFieldValue","colour_random","import_random","colour_rgb","provideFunction_","FUNCTION_NAME_PLACEHOLDER_","colour_blend","lists","lists_create_empty","lists_create_with","Array","itemCount_","lists_repeat","lists_length","lists_isEmpty","lists_indexOf","lists_getIndex","Error","lists_setIndex","getDistinctName","lists_getSublist","String","import_sys","lists_sort","lists_split","lists_reverse","logic","controls_if","STATEMENT_PREFIX","injectId","statementToCode","STATEMENT_SUFFIX","getInput","controls_ifelse","logic_compare","EQ","NEQ","LT","LTE","GT","GTE","logic_operation","logic_negate","logic_boolean","logic_null","logic_ternary","loops","controls_repeat_ext","getField","addLoopTrap","controls_repeat","controls_whileUntil","controls_for","h","g","k","Number","Math","abs","l","controls_forEach","controls_flow_statements","Constants","Loops","CONTROL_FLOW_IN_LOOP_CHECK_MIXIN","getSurroundLoop","suppressPrefixSuffix","math","math_number","Infinity","math_arithmetic","ADD","MINUS","MULTIPLY","DIVIDE","POWER","math_single","import_math","math_constant","PI","E","GOLDEN_RATIO","SQRT2","SQRT1_2","INFINITY","math_number_property","from_numbers_import_Number","math_change","math_round","math_trig","math_on_list","math_modulo","math_constrain","math_random_int","math_random_float","math_atan2","procedures","procedures_defreturn","name","arguments_","PROCEDURE_CATEGORY_NAME","INFINITE_LOOP_TRAP","procedures_defnoreturn","procedures_callreturn","procedures_callnoreturn","procedures_ifreturn","hasReturnValue_","texts","text","text_multiline","forceString_","strRegExp","test","text_join","text_append","text_length","text_isEmpty","text_indexOf","text_charAt","text_getSubstring","text_changeCase","UPPERCASE","LOWERCASE","TITLECASE","text_trim","LEFT","RIGHT","BOTH","text_print","text_prompt_ext","text_prompt","text_count","text_replace","text_reverse","variables_get","variables_set","variablesDynamic","variables_get_dynamic","variables_set_dynamic"],"mappings":"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","sourcesContent":["/* eslint-disable */\r\n;(function(root, factory) {\r\n  if (typeof define === 'function' && define.amd) { // AMD\r\n    define(['./core'], factory);\r\n  } else if (typeof exports === 'object') { // Node.js\r\n    module.exports = factory(require('./core'));\r\n  } else { // Browser\r\n    root.Blockly.Python = factory(root.Blockly);\r\n  }\r\n}(this, function(Blockly) {\r\n// Do not edit this file; automatically generated by gulp.\r\n'use strict';\r\n\r\n\r\nBlockly.Python=new Blockly.Generator(\"Python\");Blockly.Python.addReservedWords(\"False,None,True,and,as,assert,break,class,continue,def,del,elif,else,except,exec,finally,for,from,global,if,import,in,is,lambda,nonlocal,not,or,pass,print,raise,return,try,while,with,yield,NotImplemented,Ellipsis,__debug__,quit,exit,copyright,license,credits,ArithmeticError,AssertionError,AttributeError,BaseException,BlockingIOError,BrokenPipeError,BufferError,BytesWarning,ChildProcessError,ConnectionAbortedError,ConnectionError,ConnectionRefusedError,ConnectionResetError,DeprecationWarning,EOFError,Ellipsis,EnvironmentError,Exception,FileExistsError,FileNotFoundError,FloatingPointError,FutureWarning,GeneratorExit,IOError,ImportError,ImportWarning,IndentationError,IndexError,InterruptedError,IsADirectoryError,KeyError,KeyboardInterrupt,LookupError,MemoryError,ModuleNotFoundError,NameError,NotADirectoryError,NotImplemented,NotImplementedError,OSError,OverflowError,PendingDeprecationWarning,PermissionError,ProcessLookupError,RecursionError,ReferenceError,ResourceWarning,RuntimeError,RuntimeWarning,StandardError,StopAsyncIteration,StopIteration,SyntaxError,SyntaxWarning,SystemError,SystemExit,TabError,TimeoutError,TypeError,UnboundLocalError,UnicodeDecodeError,UnicodeEncodeError,UnicodeError,UnicodeTranslateError,UnicodeWarning,UserWarning,ValueError,Warning,ZeroDivisionError,_,__build_class__,__debug__,__doc__,__import__,__loader__,__name__,__package__,__spec__,abs,all,any,apply,ascii,basestring,bin,bool,buffer,bytearray,bytes,callable,chr,classmethod,cmp,coerce,compile,complex,copyright,credits,delattr,dict,dir,divmod,enumerate,eval,exec,execfile,exit,file,filter,float,format,frozenset,getattr,globals,hasattr,hash,help,hex,id,input,int,intern,isinstance,issubclass,iter,len,license,list,locals,long,map,max,memoryview,min,next,object,oct,open,ord,pow,print,property,quit,range,raw_input,reduce,reload,repr,reversed,round,set,setattr,slice,sorted,staticmethod,str,sum,super,tuple,type,unichr,unicode,vars,xrange,zip\");\r\nBlockly.Python.ORDER_ATOMIC=0;Blockly.Python.ORDER_COLLECTION=1;Blockly.Python.ORDER_STRING_CONVERSION=1;Blockly.Python.ORDER_MEMBER=2.1;Blockly.Python.ORDER_FUNCTION_CALL=2.2;Blockly.Python.ORDER_EXPONENTIATION=3;Blockly.Python.ORDER_UNARY_SIGN=4;Blockly.Python.ORDER_BITWISE_NOT=4;Blockly.Python.ORDER_MULTIPLICATIVE=5;Blockly.Python.ORDER_ADDITIVE=6;Blockly.Python.ORDER_BITWISE_SHIFT=7;Blockly.Python.ORDER_BITWISE_AND=8;Blockly.Python.ORDER_BITWISE_XOR=9;Blockly.Python.ORDER_BITWISE_OR=10;\r\nBlockly.Python.ORDER_RELATIONAL=11;Blockly.Python.ORDER_LOGICAL_NOT=12;Blockly.Python.ORDER_LOGICAL_AND=13;Blockly.Python.ORDER_LOGICAL_OR=14;Blockly.Python.ORDER_CONDITIONAL=15;Blockly.Python.ORDER_LAMBDA=16;Blockly.Python.ORDER_NONE=99;\r\nBlockly.Python.ORDER_OVERRIDES=[[Blockly.Python.ORDER_FUNCTION_CALL,Blockly.Python.ORDER_MEMBER],[Blockly.Python.ORDER_FUNCTION_CALL,Blockly.Python.ORDER_FUNCTION_CALL],[Blockly.Python.ORDER_MEMBER,Blockly.Python.ORDER_MEMBER],[Blockly.Python.ORDER_MEMBER,Blockly.Python.ORDER_FUNCTION_CALL],[Blockly.Python.ORDER_LOGICAL_NOT,Blockly.Python.ORDER_LOGICAL_NOT],[Blockly.Python.ORDER_LOGICAL_AND,Blockly.Python.ORDER_LOGICAL_AND],[Blockly.Python.ORDER_LOGICAL_OR,Blockly.Python.ORDER_LOGICAL_OR]];\r\nBlockly.Python.init=function(a){Blockly.Python.PASS=this.INDENT+\"pass\\n\";Blockly.Python.definitions_=Object.create(null);Blockly.Python.functionNames_=Object.create(null);Blockly.Python.variableDB_?Blockly.Python.variableDB_.reset():Blockly.Python.variableDB_=new Blockly.Names(Blockly.Python.RESERVED_WORDS_);Blockly.Python.variableDB_.setVariableMap(a.getVariableMap());for(var b=[],c=Blockly.Variables.allDeveloperVariables(a),d=0;d<c.length;d++)b.push(Blockly.Python.variableDB_.getName(c[d],Blockly.Names.DEVELOPER_VARIABLE_TYPE)+\r\n\" = None\");a=Blockly.Variables.allUsedVarModels(a);for(d=0;d<a.length;d++)b.push(Blockly.Python.variableDB_.getName(a[d].getId(),Blockly.VARIABLE_CATEGORY_NAME)+\" = None\");Blockly.Python.definitions_.variables=b.join(\"\\n\")};\r\nBlockly.Python.finish=function(a){var b=[],c=[],d;for(d in Blockly.Python.definitions_){var e=Blockly.Python.definitions_[d];e.match(/^(from\\s+\\S+\\s+)?import\\s+\\S+/)?b.push(e):c.push(e)}delete Blockly.Python.definitions_;delete Blockly.Python.functionNames_;Blockly.Python.variableDB_.reset();return(b.join(\"\\n\")+\"\\n\\n\"+c.join(\"\\n\\n\")).replace(/\\n\\n+/g,\"\\n\\n\").replace(/\\n*$/,\"\\n\\n\\n\")+a};Blockly.Python.scrubNakedValue=function(a){return a+\"\\n\"};\r\nBlockly.Python.quote_=function(a){a=a.replace(/\\\\/g,\"\\\\\\\\\").replace(/\\n/g,\"\\\\\\n\");var b=\"'\";-1!==a.indexOf(\"'\")&&(-1===a.indexOf('\"')?b='\"':a=a.replace(/'/g,\"\\\\'\"));return b+a+b};Blockly.Python.multiline_quote_=function(a){a=a.replace(/'''/g,\"\\\\'\\\\'\\\\'\");return\"'''\"+a+\"'''\"};\r\nBlockly.Python.scrub_=function(a,b,c){var d=\"\";if(!a.outputConnection||!a.outputConnection.targetConnection){var e=a.getCommentText();e&&(e=Blockly.utils.string.wrap(e,Blockly.Python.COMMENT_WRAP-3),d+=Blockly.Python.prefixLines(e+\"\\n\",\"# \"));for(var f=0;f<a.inputList.length;f++)a.inputList[f].type==Blockly.INPUT_VALUE&&(e=a.inputList[f].connection.targetBlock())&&(e=Blockly.Python.allNestedComments(e))&&(d+=Blockly.Python.prefixLines(e,\"# \"))}a=a.nextConnection&&a.nextConnection.targetBlock();c=\r\nc?\"\":Blockly.Python.blockToCode(a);return d+b+c};Blockly.Python.getAdjustedInt=function(a,b,c,d){c=c||0;a.workspace.options.oneBasedIndex&&c--;var e=a.workspace.options.oneBasedIndex?\"1\":\"0\";a=Blockly.Python.valueToCode(a,b,c?Blockly.Python.ORDER_ADDITIVE:Blockly.Python.ORDER_NONE)||e;Blockly.isNumber(a)?(a=parseInt(a,10)+c,d&&(a=-a)):(a=0<c?\"int(\"+a+\" + \"+c+\")\":0>c?\"int(\"+a+\" - \"+-c+\")\":\"int(\"+a+\")\",d&&(a=\"-\"+a));return a};Blockly.Python.colour={};Blockly.Python.colour_picker=function(a){return[Blockly.Python.quote_(a.getFieldValue(\"COLOUR\")),Blockly.Python.ORDER_ATOMIC]};Blockly.Python.colour_random=function(a){Blockly.Python.definitions_.import_random=\"import random\";return[\"'#%06x' % random.randint(0, 2**24 - 1)\",Blockly.Python.ORDER_FUNCTION_CALL]};\r\nBlockly.Python.colour_rgb=function(a){var b=Blockly.Python.provideFunction_(\"colour_rgb\",[\"def \"+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+\"(r, g, b):\",\"  r = round(min(100, max(0, r)) * 2.55)\",\"  g = round(min(100, max(0, g)) * 2.55)\",\"  b = round(min(100, max(0, b)) * 2.55)\",\"  return '#%02x%02x%02x' % (r, g, b)\"]),c=Blockly.Python.valueToCode(a,\"RED\",Blockly.Python.ORDER_NONE)||0,d=Blockly.Python.valueToCode(a,\"GREEN\",Blockly.Python.ORDER_NONE)||0;a=Blockly.Python.valueToCode(a,\"BLUE\",Blockly.Python.ORDER_NONE)||\r\n0;return[b+\"(\"+c+\", \"+d+\", \"+a+\")\",Blockly.Python.ORDER_FUNCTION_CALL]};\r\nBlockly.Python.colour_blend=function(a){var b=Blockly.Python.provideFunction_(\"colour_blend\",[\"def \"+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+\"(colour1, colour2, ratio):\",\"  r1, r2 = int(colour1[1:3], 16), int(colour2[1:3], 16)\",\"  g1, g2 = int(colour1[3:5], 16), int(colour2[3:5], 16)\",\"  b1, b2 = int(colour1[5:7], 16), int(colour2[5:7], 16)\",\"  ratio = min(1, max(0, ratio))\",\"  r = round(r1 * (1 - ratio) + r2 * ratio)\",\"  g = round(g1 * (1 - ratio) + g2 * ratio)\",\"  b = round(b1 * (1 - ratio) + b2 * ratio)\",\r\n\"  return '#%02x%02x%02x' % (r, g, b)\"]),c=Blockly.Python.valueToCode(a,\"COLOUR1\",Blockly.Python.ORDER_NONE)||\"'#000000'\",d=Blockly.Python.valueToCode(a,\"COLOUR2\",Blockly.Python.ORDER_NONE)||\"'#000000'\";a=Blockly.Python.valueToCode(a,\"RATIO\",Blockly.Python.ORDER_NONE)||0;return[b+\"(\"+c+\", \"+d+\", \"+a+\")\",Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.lists={};Blockly.Python.lists_create_empty=function(a){return[\"[]\",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.lists_create_with=function(a){for(var b=Array(a.itemCount_),c=0;c<a.itemCount_;c++)b[c]=Blockly.Python.valueToCode(a,\"ADD\"+c,Blockly.Python.ORDER_NONE)||\"None\";return[\"[\"+b.join(\", \")+\"]\",Blockly.Python.ORDER_ATOMIC]};\r\nBlockly.Python.lists_repeat=function(a){var b=Blockly.Python.valueToCode(a,\"ITEM\",Blockly.Python.ORDER_NONE)||\"None\";a=Blockly.Python.valueToCode(a,\"NUM\",Blockly.Python.ORDER_MULTIPLICATIVE)||\"0\";return[\"[\"+b+\"] * \"+a,Blockly.Python.ORDER_MULTIPLICATIVE]};Blockly.Python.lists_length=function(a){return[\"len(\"+(Blockly.Python.valueToCode(a,\"VALUE\",Blockly.Python.ORDER_NONE)||\"[]\")+\")\",Blockly.Python.ORDER_FUNCTION_CALL]};\r\nBlockly.Python.lists_isEmpty=function(a){return[\"not len(\"+(Blockly.Python.valueToCode(a,\"VALUE\",Blockly.Python.ORDER_NONE)||\"[]\")+\")\",Blockly.Python.ORDER_LOGICAL_NOT]};\r\nBlockly.Python.lists_indexOf=function(a){var b=Blockly.Python.valueToCode(a,\"FIND\",Blockly.Python.ORDER_NONE)||\"[]\",c=Blockly.Python.valueToCode(a,\"VALUE\",Blockly.Python.ORDER_NONE)||\"''\";if(a.workspace.options.oneBasedIndex)var d=\" 0\",e=\" + 1\",f=\"\";else d=\" -1\",e=\"\",f=\" - 1\";if(\"FIRST\"==a.getFieldValue(\"END\"))return a=Blockly.Python.provideFunction_(\"first_index\",[\"def \"+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+\"(my_list, elem):\",\"  try: index = my_list.index(elem)\"+e,\"  except: index =\"+d,\"  return index\"]),\r\n[a+\"(\"+c+\", \"+b+\")\",Blockly.Python.ORDER_FUNCTION_CALL];a=Blockly.Python.provideFunction_(\"last_index\",[\"def \"+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+\"(my_list, elem):\",\"  try: index = len(my_list) - my_list[::-1].index(elem)\"+f,\"  except: index =\"+d,\"  return index\"]);return[a+\"(\"+c+\", \"+b+\")\",Blockly.Python.ORDER_FUNCTION_CALL]};\r\nBlockly.Python.lists_getIndex=function(a){var b=a.getFieldValue(\"MODE\")||\"GET\",c=a.getFieldValue(\"WHERE\")||\"FROM_START\",d=Blockly.Python.valueToCode(a,\"VALUE\",\"RANDOM\"==c?Blockly.Python.ORDER_NONE:Blockly.Python.ORDER_MEMBER)||\"[]\";switch(c){case \"FIRST\":if(\"GET\"==b)return[d+\"[0]\",Blockly.Python.ORDER_MEMBER];if(\"GET_REMOVE\"==b)return[d+\".pop(0)\",Blockly.Python.ORDER_FUNCTION_CALL];if(\"REMOVE\"==b)return d+\".pop(0)\\n\";break;case \"LAST\":if(\"GET\"==b)return[d+\"[-1]\",Blockly.Python.ORDER_MEMBER];if(\"GET_REMOVE\"==\r\nb)return[d+\".pop()\",Blockly.Python.ORDER_FUNCTION_CALL];if(\"REMOVE\"==b)return d+\".pop()\\n\";break;case \"FROM_START\":a=Blockly.Python.getAdjustedInt(a,\"AT\");if(\"GET\"==b)return[d+\"[\"+a+\"]\",Blockly.Python.ORDER_MEMBER];if(\"GET_REMOVE\"==b)return[d+\".pop(\"+a+\")\",Blockly.Python.ORDER_FUNCTION_CALL];if(\"REMOVE\"==b)return d+\".pop(\"+a+\")\\n\";break;case \"FROM_END\":a=Blockly.Python.getAdjustedInt(a,\"AT\",1,!0);if(\"GET\"==b)return[d+\"[\"+a+\"]\",Blockly.Python.ORDER_MEMBER];if(\"GET_REMOVE\"==b)return[d+\".pop(\"+a+\")\",\r\nBlockly.Python.ORDER_FUNCTION_CALL];if(\"REMOVE\"==b)return d+\".pop(\"+a+\")\\n\";break;case \"RANDOM\":Blockly.Python.definitions_.import_random=\"import random\";if(\"GET\"==b)return[\"random.choice(\"+d+\")\",Blockly.Python.ORDER_FUNCTION_CALL];d=Blockly.Python.provideFunction_(\"lists_remove_random_item\",[\"def \"+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+\"(myList):\",\"  x = int(random.random() * len(myList))\",\"  return myList.pop(x)\"])+\"(\"+d+\")\";if(\"GET_REMOVE\"==b)return[d,Blockly.Python.ORDER_FUNCTION_CALL];if(\"REMOVE\"==\r\nb)return d+\"\\n\"}throw Error(\"Unhandled combination (lists_getIndex).\");};\r\nBlockly.Python.lists_setIndex=function(a){var b=Blockly.Python.valueToCode(a,\"LIST\",Blockly.Python.ORDER_MEMBER)||\"[]\",c=a.getFieldValue(\"MODE\")||\"GET\",d=a.getFieldValue(\"WHERE\")||\"FROM_START\",e=Blockly.Python.valueToCode(a,\"TO\",Blockly.Python.ORDER_NONE)||\"None\";switch(d){case \"FIRST\":if(\"SET\"==c)return b+\"[0] = \"+e+\"\\n\";if(\"INSERT\"==c)return b+\".insert(0, \"+e+\")\\n\";break;case \"LAST\":if(\"SET\"==c)return b+\"[-1] = \"+e+\"\\n\";if(\"INSERT\"==c)return b+\".append(\"+e+\")\\n\";break;case \"FROM_START\":a=Blockly.Python.getAdjustedInt(a,\r\n\"AT\");if(\"SET\"==c)return b+\"[\"+a+\"] = \"+e+\"\\n\";if(\"INSERT\"==c)return b+\".insert(\"+a+\", \"+e+\")\\n\";break;case \"FROM_END\":a=Blockly.Python.getAdjustedInt(a,\"AT\",1,!0);if(\"SET\"==c)return b+\"[\"+a+\"] = \"+e+\"\\n\";if(\"INSERT\"==c)return b+\".insert(\"+a+\", \"+e+\")\\n\";break;case \"RANDOM\":Blockly.Python.definitions_.import_random=\"import random\";b.match(/^\\w+$/)?a=\"\":(a=Blockly.Python.variableDB_.getDistinctName(\"tmp_list\",Blockly.VARIABLE_CATEGORY_NAME),d=a+\" = \"+b+\"\\n\",b=a,a=d);d=Blockly.Python.variableDB_.getDistinctName(\"tmp_x\",\r\nBlockly.VARIABLE_CATEGORY_NAME);a+=d+\" = int(random.random() * len(\"+b+\"))\\n\";if(\"SET\"==c)return a+(b+\"[\"+d+\"] = \"+e+\"\\n\");if(\"INSERT\"==c)return a+(b+\".insert(\"+d+\", \"+e+\")\\n\")}throw Error(\"Unhandled combination (lists_setIndex).\");};\r\nBlockly.Python.lists_getSublist=function(a){var b=Blockly.Python.valueToCode(a,\"LIST\",Blockly.Python.ORDER_MEMBER)||\"[]\",c=a.getFieldValue(\"WHERE1\"),d=a.getFieldValue(\"WHERE2\");switch(c){case \"FROM_START\":c=Blockly.Python.getAdjustedInt(a,\"AT1\");\"0\"==c&&(c=\"\");break;case \"FROM_END\":c=Blockly.Python.getAdjustedInt(a,\"AT1\",1,!0);break;case \"FIRST\":c=\"\";break;default:throw Error(\"Unhandled option (lists_getSublist)\");}switch(d){case \"FROM_START\":a=Blockly.Python.getAdjustedInt(a,\"AT2\",1);break;case \"FROM_END\":a=\r\nBlockly.Python.getAdjustedInt(a,\"AT2\",0,!0);Blockly.isNumber(String(a))?\"0\"==a&&(a=\"\"):(Blockly.Python.definitions_.import_sys=\"import sys\",a+=\" or sys.maxsize\");break;case \"LAST\":a=\"\";break;default:throw Error(\"Unhandled option (lists_getSublist)\");}return[b+\"[\"+c+\" : \"+a+\"]\",Blockly.Python.ORDER_MEMBER]};\r\nBlockly.Python.lists_sort=function(a){var b=Blockly.Python.valueToCode(a,\"LIST\",Blockly.Python.ORDER_NONE)||\"[]\",c=a.getFieldValue(\"TYPE\");a=\"1\"===a.getFieldValue(\"DIRECTION\")?\"False\":\"True\";return[Blockly.Python.provideFunction_(\"lists_sort\",[\"def \"+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+\"(my_list, type, reverse):\",\"  def try_float(s):\",\"    try:\",\"      return float(s)\",\"    except:\",\"      return 0\",\"  key_funcs = {\",'    \"NUMERIC\": try_float,','    \"TEXT\": str,','    \"IGNORE_CASE\": lambda s: str(s).lower()',\r\n\"  }\",\"  key_func = key_funcs[type]\",\"  list_cpy = list(my_list)\",\"  return sorted(list_cpy, key=key_func, reverse=reverse)\"])+\"(\"+b+', \"'+c+'\", '+a+\")\",Blockly.Python.ORDER_FUNCTION_CALL]};\r\nBlockly.Python.lists_split=function(a){var b=a.getFieldValue(\"MODE\");if(\"SPLIT\"==b)b=Blockly.Python.valueToCode(a,\"INPUT\",Blockly.Python.ORDER_MEMBER)||\"''\",a=Blockly.Python.valueToCode(a,\"DELIM\",Blockly.Python.ORDER_NONE),a=b+\".split(\"+a+\")\";else if(\"JOIN\"==b)b=Blockly.Python.valueToCode(a,\"INPUT\",Blockly.Python.ORDER_NONE)||\"[]\",a=Blockly.Python.valueToCode(a,\"DELIM\",Blockly.Python.ORDER_MEMBER)||\"''\",a=a+\".join(\"+b+\")\";else throw Error(\"Unknown mode: \"+b);return[a,Blockly.Python.ORDER_FUNCTION_CALL]};\r\nBlockly.Python.lists_reverse=function(a){return[\"list(reversed(\"+(Blockly.Python.valueToCode(a,\"LIST\",Blockly.Python.ORDER_NONE)||\"[]\")+\"))\",Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.logic={};\r\nBlockly.Python.controls_if=function(a){var b=0,c=\"\";Blockly.Python.STATEMENT_PREFIX&&(c+=Blockly.Python.injectId(Blockly.Python.STATEMENT_PREFIX,a));do{var d=Blockly.Python.valueToCode(a,\"IF\"+b,Blockly.Python.ORDER_NONE)||\"False\";var e=Blockly.Python.statementToCode(a,\"DO\"+b)||Blockly.Python.PASS;Blockly.Python.STATEMENT_SUFFIX&&(e=Blockly.Python.prefixLines(Blockly.Python.injectId(Blockly.Python.STATEMENT_SUFFIX,a),Blockly.Python.INDENT)+e);c+=(0==b?\"if \":\"elif \")+d+\":\\n\"+e;++b}while(a.getInput(\"IF\"+\r\nb));if(a.getInput(\"ELSE\")||Blockly.Python.STATEMENT_SUFFIX)e=Blockly.Python.statementToCode(a,\"ELSE\")||Blockly.Python.PASS,Blockly.Python.STATEMENT_SUFFIX&&(e=Blockly.Python.prefixLines(Blockly.Python.injectId(Blockly.Python.STATEMENT_SUFFIX,a),Blockly.Python.INDENT)+e),c+=\"else:\\n\"+e;return c};Blockly.Python.controls_ifelse=Blockly.Python.controls_if;\r\nBlockly.Python.logic_compare=function(a){var b={EQ:\"==\",NEQ:\"!=\",LT:\"<\",LTE:\"<=\",GT:\">\",GTE:\">=\"}[a.getFieldValue(\"OP\")],c=Blockly.Python.ORDER_RELATIONAL,d=Blockly.Python.valueToCode(a,\"A\",c)||\"0\";a=Blockly.Python.valueToCode(a,\"B\",c)||\"0\";return[d+\" \"+b+\" \"+a,c]};\r\nBlockly.Python.logic_operation=function(a){var b=\"AND\"==a.getFieldValue(\"OP\")?\"and\":\"or\",c=\"and\"==b?Blockly.Python.ORDER_LOGICAL_AND:Blockly.Python.ORDER_LOGICAL_OR,d=Blockly.Python.valueToCode(a,\"A\",c);a=Blockly.Python.valueToCode(a,\"B\",c);if(d||a){var e=\"and\"==b?\"True\":\"False\";d||(d=e);a||(a=e)}else a=d=\"False\";return[d+\" \"+b+\" \"+a,c]};Blockly.Python.logic_negate=function(a){return[\"not \"+(Blockly.Python.valueToCode(a,\"BOOL\",Blockly.Python.ORDER_LOGICAL_NOT)||\"True\"),Blockly.Python.ORDER_LOGICAL_NOT]};\r\nBlockly.Python.logic_boolean=function(a){return[\"TRUE\"==a.getFieldValue(\"BOOL\")?\"True\":\"False\",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.logic_null=function(a){return[\"None\",Blockly.Python.ORDER_ATOMIC]};\r\nBlockly.Python.logic_ternary=function(a){var b=Blockly.Python.valueToCode(a,\"IF\",Blockly.Python.ORDER_CONDITIONAL)||\"False\",c=Blockly.Python.valueToCode(a,\"THEN\",Blockly.Python.ORDER_CONDITIONAL)||\"None\";a=Blockly.Python.valueToCode(a,\"ELSE\",Blockly.Python.ORDER_CONDITIONAL)||\"None\";return[c+\" if \"+b+\" else \"+a,Blockly.Python.ORDER_CONDITIONAL]};Blockly.Python.loops={};Blockly.Python.controls_repeat_ext=function(a){var b=a.getField(\"TIMES\")?String(parseInt(a.getFieldValue(\"TIMES\"),10)):Blockly.Python.valueToCode(a,\"TIMES\",Blockly.Python.ORDER_NONE)||\"0\";b=Blockly.isNumber(b)?parseInt(b,10):\"int(\"+b+\")\";var c=Blockly.Python.statementToCode(a,\"DO\");c=Blockly.Python.addLoopTrap(c,a)||Blockly.Python.PASS;return\"for \"+Blockly.Python.variableDB_.getDistinctName(\"count\",Blockly.VARIABLE_CATEGORY_NAME)+\" in range(\"+b+\"):\\n\"+c};\r\nBlockly.Python.controls_repeat=Blockly.Python.controls_repeat_ext;Blockly.Python.controls_whileUntil=function(a){var b=\"UNTIL\"==a.getFieldValue(\"MODE\"),c=Blockly.Python.valueToCode(a,\"BOOL\",b?Blockly.Python.ORDER_LOGICAL_NOT:Blockly.Python.ORDER_NONE)||\"False\",d=Blockly.Python.statementToCode(a,\"DO\");d=Blockly.Python.addLoopTrap(d,a)||Blockly.Python.PASS;b&&(c=\"not \"+c);return\"while \"+c+\":\\n\"+d};\r\nBlockly.Python.controls_for=function(a){var b=Blockly.Python.variableDB_.getName(a.getFieldValue(\"VAR\"),Blockly.VARIABLE_CATEGORY_NAME),c=Blockly.Python.valueToCode(a,\"FROM\",Blockly.Python.ORDER_NONE)||\"0\",d=Blockly.Python.valueToCode(a,\"TO\",Blockly.Python.ORDER_NONE)||\"0\",e=Blockly.Python.valueToCode(a,\"BY\",Blockly.Python.ORDER_NONE)||\"1\",f=Blockly.Python.statementToCode(a,\"DO\");f=Blockly.Python.addLoopTrap(f,a)||Blockly.Python.PASS;var h=\"\",g=function(){return Blockly.Python.provideFunction_(\"upRange\",\r\n[\"def \"+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+\"(start, stop, step):\",\"  while start <= stop:\",\"    yield start\",\"    start += abs(step)\"])},k=function(){return Blockly.Python.provideFunction_(\"downRange\",[\"def \"+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+\"(start, stop, step):\",\"  while start >= stop:\",\"    yield start\",\"    start -= abs(step)\"])};a=function(a,b,c){return\"(\"+a+\" <= \"+b+\") and \"+g()+\"(\"+a+\", \"+b+\", \"+c+\") or \"+k()+\"(\"+a+\", \"+b+\", \"+c+\")\"};if(Blockly.isNumber(c)&&Blockly.isNumber(d)&&\r\nBlockly.isNumber(e))c=Number(c),d=Number(d),e=Math.abs(Number(e)),0===c%1&&0===d%1&&0===e%1?(c<=d?(d++,a=0==c&&1==e?d:c+\", \"+d,1!=e&&(a+=\", \"+e)):(d--,a=c+\", \"+d+\", -\"+e),a=\"range(\"+a+\")\"):(a=c<d?g():k(),a+=\"(\"+c+\", \"+d+\", \"+e+\")\");else{var l=function(a,c){Blockly.isNumber(a)?a=Number(a):a.match(/^\\w+$/)?a=\"float(\"+a+\")\":(c=Blockly.Python.variableDB_.getDistinctName(b+c,Blockly.VARIABLE_CATEGORY_NAME),h+=c+\" = float(\"+a+\")\\n\",a=c);return a};c=l(c,\"_start\");d=l(d,\"_end\");l(e,\"_inc\");a=\"number\"==typeof c&&\r\n\"number\"==typeof d?c<d?g(c,d,e):k(c,d,e):a(c,d,e)}return h+=\"for \"+b+\" in \"+a+\":\\n\"+f};Blockly.Python.controls_forEach=function(a){var b=Blockly.Python.variableDB_.getName(a.getFieldValue(\"VAR\"),Blockly.VARIABLE_CATEGORY_NAME),c=Blockly.Python.valueToCode(a,\"LIST\",Blockly.Python.ORDER_RELATIONAL)||\"[]\",d=Blockly.Python.statementToCode(a,\"DO\");d=Blockly.Python.addLoopTrap(d,a)||Blockly.Python.PASS;return\"for \"+b+\" in \"+c+\":\\n\"+d};\r\nBlockly.Python.controls_flow_statements=function(a){var b=\"\";Blockly.Python.STATEMENT_PREFIX&&(b+=Blockly.Python.injectId(Blockly.Python.STATEMENT_PREFIX,a));Blockly.Python.STATEMENT_SUFFIX&&(b+=Blockly.Python.injectId(Blockly.Python.STATEMENT_SUFFIX,a));if(Blockly.Python.STATEMENT_PREFIX){var c=Blockly.Constants.Loops.CONTROL_FLOW_IN_LOOP_CHECK_MIXIN.getSurroundLoop(a);c&&!c.suppressPrefixSuffix&&(b+=Blockly.Python.injectId(Blockly.Python.STATEMENT_PREFIX,c))}switch(a.getFieldValue(\"FLOW\")){case \"BREAK\":return b+\r\n\"break\\n\";case \"CONTINUE\":return b+\"continue\\n\"}throw Error(\"Unknown flow statement.\");};Blockly.Python.math={};Blockly.Python.addReservedWords(\"math,random,Number\");Blockly.Python.math_number=function(a){a=Number(a.getFieldValue(\"NUM\"));if(Infinity==a){a='float(\"inf\")';var b=Blockly.Python.ORDER_FUNCTION_CALL}else-Infinity==a?(a='-float(\"inf\")',b=Blockly.Python.ORDER_UNARY_SIGN):b=0>a?Blockly.Python.ORDER_UNARY_SIGN:Blockly.Python.ORDER_ATOMIC;return[a,b]};\r\nBlockly.Python.math_arithmetic=function(a){var b={ADD:[\" + \",Blockly.Python.ORDER_ADDITIVE],MINUS:[\" - \",Blockly.Python.ORDER_ADDITIVE],MULTIPLY:[\" * \",Blockly.Python.ORDER_MULTIPLICATIVE],DIVIDE:[\" / \",Blockly.Python.ORDER_MULTIPLICATIVE],POWER:[\" ** \",Blockly.Python.ORDER_EXPONENTIATION]}[a.getFieldValue(\"OP\")],c=b[0];b=b[1];var d=Blockly.Python.valueToCode(a,\"A\",b)||\"0\";a=Blockly.Python.valueToCode(a,\"B\",b)||\"0\";return[d+c+a,b]};\r\nBlockly.Python.math_single=function(a){var b=a.getFieldValue(\"OP\");if(\"NEG\"==b){var c=Blockly.Python.valueToCode(a,\"NUM\",Blockly.Python.ORDER_UNARY_SIGN)||\"0\";return[\"-\"+c,Blockly.Python.ORDER_UNARY_SIGN]}Blockly.Python.definitions_.import_math=\"import math\";a=\"SIN\"==b||\"COS\"==b||\"TAN\"==b?Blockly.Python.valueToCode(a,\"NUM\",Blockly.Python.ORDER_MULTIPLICATIVE)||\"0\":Blockly.Python.valueToCode(a,\"NUM\",Blockly.Python.ORDER_NONE)||\"0\";switch(b){case \"ABS\":c=\"math.fabs(\"+a+\")\";break;case \"ROOT\":c=\"math.sqrt(\"+\r\na+\")\";break;case \"LN\":c=\"math.log(\"+a+\")\";break;case \"LOG10\":c=\"math.log10(\"+a+\")\";break;case \"EXP\":c=\"math.exp(\"+a+\")\";break;case \"POW10\":c=\"math.pow(10,\"+a+\")\";break;case \"ROUND\":c=\"round(\"+a+\")\";break;case \"ROUNDUP\":c=\"math.ceil(\"+a+\")\";break;case \"ROUNDDOWN\":c=\"math.floor(\"+a+\")\";break;case \"SIN\":c=\"math.sin(\"+a+\" / 180.0 * math.pi)\";break;case \"COS\":c=\"math.cos(\"+a+\" / 180.0 * math.pi)\";break;case \"TAN\":c=\"math.tan(\"+a+\" / 180.0 * math.pi)\"}if(c)return[c,Blockly.Python.ORDER_FUNCTION_CALL];switch(b){case \"ASIN\":c=\r\n\"math.asin(\"+a+\") / math.pi * 180\";break;case \"ACOS\":c=\"math.acos(\"+a+\") / math.pi * 180\";break;case \"ATAN\":c=\"math.atan(\"+a+\") / math.pi * 180\";break;default:throw Error(\"Unknown math operator: \"+b);}return[c,Blockly.Python.ORDER_MULTIPLICATIVE]};\r\nBlockly.Python.math_constant=function(a){var b={PI:[\"math.pi\",Blockly.Python.ORDER_MEMBER],E:[\"math.e\",Blockly.Python.ORDER_MEMBER],GOLDEN_RATIO:[\"(1 + math.sqrt(5)) / 2\",Blockly.Python.ORDER_MULTIPLICATIVE],SQRT2:[\"math.sqrt(2)\",Blockly.Python.ORDER_MEMBER],SQRT1_2:[\"math.sqrt(1.0 / 2)\",Blockly.Python.ORDER_MEMBER],INFINITY:[\"float('inf')\",Blockly.Python.ORDER_ATOMIC]};a=a.getFieldValue(\"CONSTANT\");\"INFINITY\"!=a&&(Blockly.Python.definitions_.import_math=\"import math\");return b[a]};\r\nBlockly.Python.math_number_property=function(a){var b=Blockly.Python.valueToCode(a,\"NUMBER_TO_CHECK\",Blockly.Python.ORDER_MULTIPLICATIVE)||\"0\",c=a.getFieldValue(\"PROPERTY\");if(\"PRIME\"==c)return Blockly.Python.definitions_.import_math=\"import math\",Blockly.Python.definitions_.from_numbers_import_Number=\"from numbers import Number\",[Blockly.Python.provideFunction_(\"math_isPrime\",[\"def \"+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+\"(n):\",\"  # https://en.wikipedia.org/wiki/Primality_test#Naive_methods\",\r\n\"  # If n is not a number but a string, try parsing it.\",\"  if not isinstance(n, Number):\",\"    try:\",\"      n = float(n)\",\"    except:\",\"      return False\",\"  if n == 2 or n == 3:\",\"    return True\",\"  # False if n is negative, is 1, or not whole, or if n is divisible by 2 or 3.\",\"  if n <= 1 or n % 1 != 0 or n % 2 == 0 or n % 3 == 0:\",\"    return False\",\"  # Check all the numbers of form 6k +/- 1, up to sqrt(n).\",\"  for x in range(6, int(math.sqrt(n)) + 2, 6):\",\"    if n % (x - 1) == 0 or n % (x + 1) == 0:\",\r\n\"      return False\",\"  return True\"])+\"(\"+b+\")\",Blockly.Python.ORDER_FUNCTION_CALL];switch(c){case \"EVEN\":var d=b+\" % 2 == 0\";break;case \"ODD\":d=b+\" % 2 == 1\";break;case \"WHOLE\":d=b+\" % 1 == 0\";break;case \"POSITIVE\":d=b+\" > 0\";break;case \"NEGATIVE\":d=b+\" < 0\";break;case \"DIVISIBLE_BY\":a=Blockly.Python.valueToCode(a,\"DIVISOR\",Blockly.Python.ORDER_MULTIPLICATIVE);if(!a||\"0\"==a)return[\"False\",Blockly.Python.ORDER_ATOMIC];d=b+\" % \"+a+\" == 0\"}return[d,Blockly.Python.ORDER_RELATIONAL]};\r\nBlockly.Python.math_change=function(a){Blockly.Python.definitions_.from_numbers_import_Number=\"from numbers import Number\";var b=Blockly.Python.valueToCode(a,\"DELTA\",Blockly.Python.ORDER_ADDITIVE)||\"0\";a=Blockly.Python.variableDB_.getName(a.getFieldValue(\"VAR\"),Blockly.VARIABLE_CATEGORY_NAME);return a+\" = (\"+a+\" if isinstance(\"+a+\", Number) else 0) + \"+b+\"\\n\"};Blockly.Python.math_round=Blockly.Python.math_single;Blockly.Python.math_trig=Blockly.Python.math_single;\r\nBlockly.Python.math_on_list=function(a){var b=a.getFieldValue(\"OP\");a=Blockly.Python.valueToCode(a,\"LIST\",Blockly.Python.ORDER_NONE)||\"[]\";switch(b){case \"SUM\":b=\"sum(\"+a+\")\";break;case \"MIN\":b=\"min(\"+a+\")\";break;case \"MAX\":b=\"max(\"+a+\")\";break;case \"AVERAGE\":Blockly.Python.definitions_.from_numbers_import_Number=\"from numbers import Number\";b=Blockly.Python.provideFunction_(\"math_mean\",[\"def \"+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+\"(myList):\",\"  localList = [e for e in myList if isinstance(e, Number)]\",\r\n\"  if not localList: return\",\"  return float(sum(localList)) / len(localList)\"]);b=b+\"(\"+a+\")\";break;case \"MEDIAN\":Blockly.Python.definitions_.from_numbers_import_Number=\"from numbers import Number\";b=Blockly.Python.provideFunction_(\"math_median\",[\"def \"+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+\"(myList):\",\"  localList = sorted([e for e in myList if isinstance(e, Number)])\",\"  if not localList: return\",\"  if len(localList) % 2 == 0:\",\"    return (localList[len(localList) // 2 - 1] + localList[len(localList) // 2]) / 2.0\",\r\n\"  else:\",\"    return localList[(len(localList) - 1) // 2]\"]);b=b+\"(\"+a+\")\";break;case \"MODE\":b=Blockly.Python.provideFunction_(\"math_modes\",[\"def \"+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+\"(some_list):\",\"  modes = []\",\"  # Using a lists of [item, count] to keep count rather than dict\",'  # to avoid \"unhashable\" errors when the counted item is itself a list or dict.',\"  counts = []\",\"  maxCount = 1\",\"  for item in some_list:\",\"    found = False\",\"    for count in counts:\",\"      if count[0] == item:\",\r\n\"        count[1] += 1\",\"        maxCount = max(maxCount, count[1])\",\"        found = True\",\"    if not found:\",\"      counts.append([item, 1])\",\"  for counted_item, item_count in counts:\",\"    if item_count == maxCount:\",\"      modes.append(counted_item)\",\"  return modes\"]);b=b+\"(\"+a+\")\";break;case \"STD_DEV\":Blockly.Python.definitions_.import_math=\"import math\";b=Blockly.Python.provideFunction_(\"math_standard_deviation\",[\"def \"+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+\"(numbers):\",\"  n = len(numbers)\",\r\n\"  if n == 0: return\",\"  mean = float(sum(numbers)) / n\",\"  variance = sum((x - mean) ** 2 for x in numbers) / n\",\"  return math.sqrt(variance)\"]);b=b+\"(\"+a+\")\";break;case \"RANDOM\":Blockly.Python.definitions_.import_random=\"import random\";b=\"random.choice(\"+a+\")\";break;default:throw Error(\"Unknown operator: \"+b);}return[b,Blockly.Python.ORDER_FUNCTION_CALL]};\r\nBlockly.Python.math_modulo=function(a){var b=Blockly.Python.valueToCode(a,\"DIVIDEND\",Blockly.Python.ORDER_MULTIPLICATIVE)||\"0\";a=Blockly.Python.valueToCode(a,\"DIVISOR\",Blockly.Python.ORDER_MULTIPLICATIVE)||\"0\";return[b+\" % \"+a,Blockly.Python.ORDER_MULTIPLICATIVE]};\r\nBlockly.Python.math_constrain=function(a){var b=Blockly.Python.valueToCode(a,\"VALUE\",Blockly.Python.ORDER_NONE)||\"0\",c=Blockly.Python.valueToCode(a,\"LOW\",Blockly.Python.ORDER_NONE)||\"0\";a=Blockly.Python.valueToCode(a,\"HIGH\",Blockly.Python.ORDER_NONE)||\"float('inf')\";return[\"min(max(\"+b+\", \"+c+\"), \"+a+\")\",Blockly.Python.ORDER_FUNCTION_CALL]};\r\nBlockly.Python.math_random_int=function(a){Blockly.Python.definitions_.import_random=\"import random\";var b=Blockly.Python.valueToCode(a,\"FROM\",Blockly.Python.ORDER_NONE)||\"0\";a=Blockly.Python.valueToCode(a,\"TO\",Blockly.Python.ORDER_NONE)||\"0\";return[\"random.randint(\"+b+\", \"+a+\")\",Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.math_random_float=function(a){Blockly.Python.definitions_.import_random=\"import random\";return[\"random.random()\",Blockly.Python.ORDER_FUNCTION_CALL]};\r\nBlockly.Python.math_atan2=function(a){Blockly.Python.definitions_.import_math=\"import math\";var b=Blockly.Python.valueToCode(a,\"X\",Blockly.Python.ORDER_NONE)||\"0\";return[\"math.atan2(\"+(Blockly.Python.valueToCode(a,\"Y\",Blockly.Python.ORDER_NONE)||\"0\")+\", \"+b+\") / math.pi * 180\",Blockly.Python.ORDER_MULTIPLICATIVE]};Blockly.Python.procedures={};\r\nBlockly.Python.procedures_defreturn=function(a){for(var b=[],c,d=a.workspace,e=Blockly.Variables.allUsedVarModels(d)||[],f=0;c=e[f];f++)c=c.name,-1==a.arguments_.indexOf(c)&&b.push(Blockly.Python.variableDB_.getName(c,Blockly.VARIABLE_CATEGORY_NAME));d=Blockly.Variables.allDeveloperVariables(d);for(f=0;f<d.length;f++)b.push(Blockly.Python.variableDB_.getName(d[f],Blockly.Names.DEVELOPER_VARIABLE_TYPE));b=b.length?Blockly.Python.INDENT+\"global \"+b.join(\", \")+\"\\n\":\"\";d=Blockly.Python.variableDB_.getName(a.getFieldValue(\"NAME\"),\r\nBlockly.PROCEDURE_CATEGORY_NAME);e=\"\";Blockly.Python.STATEMENT_PREFIX&&(e+=Blockly.Python.injectId(Blockly.Python.STATEMENT_PREFIX,a));Blockly.Python.STATEMENT_SUFFIX&&(e+=Blockly.Python.injectId(Blockly.Python.STATEMENT_SUFFIX,a));e&&(e=Blockly.Python.prefixLines(e,Blockly.Python.INDENT));c=\"\";Blockly.Python.INFINITE_LOOP_TRAP&&(c=Blockly.Python.prefixLines(Blockly.Python.injectId(Blockly.Python.INFINITE_LOOP_TRAP,a),Blockly.Python.INDENT));var h=Blockly.Python.statementToCode(a,\"STACK\"),g=Blockly.Python.valueToCode(a,\r\n\"RETURN\",Blockly.Python.ORDER_NONE)||\"\",k=\"\";h&&g&&(k=e);g?g=Blockly.Python.INDENT+\"return \"+g+\"\\n\":h||(h=Blockly.Python.PASS);var l=[];for(f=0;f<a.arguments_.length;f++)l[f]=Blockly.Python.variableDB_.getName(a.arguments_[f],Blockly.VARIABLE_CATEGORY_NAME);b=\"def \"+d+\"(\"+l.join(\", \")+\"):\\n\"+b+e+c+h+k+g;b=Blockly.Python.scrub_(a,b);Blockly.Python.definitions_[\"%\"+d]=b;return null};Blockly.Python.procedures_defnoreturn=Blockly.Python.procedures_defreturn;\r\nBlockly.Python.procedures_callreturn=function(a){for(var b=Blockly.Python.variableDB_.getName(a.getFieldValue(\"NAME\"),Blockly.PROCEDURE_CATEGORY_NAME),c=[],d=0;d<a.arguments_.length;d++)c[d]=Blockly.Python.valueToCode(a,\"ARG\"+d,Blockly.Python.ORDER_NONE)||\"None\";return[b+\"(\"+c.join(\", \")+\")\",Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.procedures_callnoreturn=function(a){return Blockly.Python.procedures_callreturn(a)[0]+\"\\n\"};\r\nBlockly.Python.procedures_ifreturn=function(a){var b=\"if \"+(Blockly.Python.valueToCode(a,\"CONDITION\",Blockly.Python.ORDER_NONE)||\"False\")+\":\\n\";Blockly.Python.STATEMENT_SUFFIX&&(b+=Blockly.Python.prefixLines(Blockly.Python.injectId(Blockly.Python.STATEMENT_SUFFIX,a),Blockly.Python.INDENT));a.hasReturnValue_?(a=Blockly.Python.valueToCode(a,\"VALUE\",Blockly.Python.ORDER_NONE)||\"None\",b+=Blockly.Python.INDENT+\"return \"+a+\"\\n\"):b+=Blockly.Python.INDENT+\"return\\n\";return b};Blockly.Python.texts={};Blockly.Python.text=function(a){return[Blockly.Python.quote_(a.getFieldValue(\"TEXT\")),Blockly.Python.ORDER_ATOMIC]};Blockly.Python.text_multiline=function(a){return[Blockly.Python.multiline_quote_(a.getFieldValue(\"TEXT\")),Blockly.Python.ORDER_ATOMIC]};Blockly.Python.text.forceString_=function(a){return Blockly.Python.text.forceString_.strRegExp.test(a)?a:\"str(\"+a+\")\"};Blockly.Python.text.forceString_.strRegExp=/^\\s*'([^']|\\\\')*'\\s*$/;\r\nBlockly.Python.text_join=function(a){switch(a.itemCount_){case 0:return[\"''\",Blockly.Python.ORDER_ATOMIC];case 1:return a=Blockly.Python.valueToCode(a,\"ADD0\",Blockly.Python.ORDER_NONE)||\"''\",a=Blockly.Python.text.forceString_(a),[a,Blockly.Python.ORDER_FUNCTION_CALL];case 2:var b=Blockly.Python.valueToCode(a,\"ADD0\",Blockly.Python.ORDER_NONE)||\"''\";a=Blockly.Python.valueToCode(a,\"ADD1\",Blockly.Python.ORDER_NONE)||\"''\";a=Blockly.Python.text.forceString_(b)+\" + \"+Blockly.Python.text.forceString_(a);\r\nreturn[a,Blockly.Python.ORDER_ADDITIVE];default:b=[];for(var c=0;c<a.itemCount_;c++)b[c]=Blockly.Python.valueToCode(a,\"ADD\"+c,Blockly.Python.ORDER_NONE)||\"''\";a=Blockly.Python.variableDB_.getDistinctName(\"x\",Blockly.VARIABLE_CATEGORY_NAME);a=\"''.join([str(\"+a+\") for \"+a+\" in [\"+b.join(\", \")+\"]])\";return[a,Blockly.Python.ORDER_FUNCTION_CALL]}};\r\nBlockly.Python.text_append=function(a){var b=Blockly.Python.variableDB_.getName(a.getFieldValue(\"VAR\"),Blockly.VARIABLE_CATEGORY_NAME);a=Blockly.Python.valueToCode(a,\"TEXT\",Blockly.Python.ORDER_NONE)||\"''\";return b+\" = str(\"+b+\") + \"+Blockly.Python.text.forceString_(a)+\"\\n\"};Blockly.Python.text_length=function(a){return[\"len(\"+(Blockly.Python.valueToCode(a,\"VALUE\",Blockly.Python.ORDER_NONE)||\"''\")+\")\",Blockly.Python.ORDER_FUNCTION_CALL]};\r\nBlockly.Python.text_isEmpty=function(a){return[\"not len(\"+(Blockly.Python.valueToCode(a,\"VALUE\",Blockly.Python.ORDER_NONE)||\"''\")+\")\",Blockly.Python.ORDER_LOGICAL_NOT]};\r\nBlockly.Python.text_indexOf=function(a){var b=\"FIRST\"==a.getFieldValue(\"END\")?\"find\":\"rfind\",c=Blockly.Python.valueToCode(a,\"FIND\",Blockly.Python.ORDER_NONE)||\"''\";b=(Blockly.Python.valueToCode(a,\"VALUE\",Blockly.Python.ORDER_MEMBER)||\"''\")+\".\"+b+\"(\"+c+\")\";return a.workspace.options.oneBasedIndex?[b+\" + 1\",Blockly.Python.ORDER_ADDITIVE]:[b,Blockly.Python.ORDER_FUNCTION_CALL]};\r\nBlockly.Python.text_charAt=function(a){var b=a.getFieldValue(\"WHERE\")||\"FROM_START\",c=Blockly.Python.valueToCode(a,\"VALUE\",Blockly.Python.ORDER_MEMBER)||\"''\";switch(b){case \"FIRST\":return[c+\"[0]\",Blockly.Python.ORDER_MEMBER];case \"LAST\":return[c+\"[-1]\",Blockly.Python.ORDER_MEMBER];case \"FROM_START\":return a=Blockly.Python.getAdjustedInt(a,\"AT\"),[c+\"[\"+a+\"]\",Blockly.Python.ORDER_MEMBER];case \"FROM_END\":return a=Blockly.Python.getAdjustedInt(a,\"AT\",1,!0),[c+\"[\"+a+\"]\",Blockly.Python.ORDER_MEMBER];case \"RANDOM\":return Blockly.Python.definitions_.import_random=\r\n\"import random\",[Blockly.Python.provideFunction_(\"text_random_letter\",[\"def \"+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+\"(text):\",\"  x = int(random.random() * len(text))\",\"  return text[x];\"])+\"(\"+c+\")\",Blockly.Python.ORDER_FUNCTION_CALL]}throw Error(\"Unhandled option (text_charAt).\");};\r\nBlockly.Python.text_getSubstring=function(a){var b=a.getFieldValue(\"WHERE1\"),c=a.getFieldValue(\"WHERE2\"),d=Blockly.Python.valueToCode(a,\"STRING\",Blockly.Python.ORDER_MEMBER)||\"''\";switch(b){case \"FROM_START\":b=Blockly.Python.getAdjustedInt(a,\"AT1\");\"0\"==b&&(b=\"\");break;case \"FROM_END\":b=Blockly.Python.getAdjustedInt(a,\"AT1\",1,!0);break;case \"FIRST\":b=\"\";break;default:throw Error(\"Unhandled option (text_getSubstring)\");}switch(c){case \"FROM_START\":a=Blockly.Python.getAdjustedInt(a,\"AT2\",1);break;case \"FROM_END\":a=\r\nBlockly.Python.getAdjustedInt(a,\"AT2\",0,!0);Blockly.isNumber(String(a))?\"0\"==a&&(a=\"\"):(Blockly.Python.definitions_.import_sys=\"import sys\",a+=\" or sys.maxsize\");break;case \"LAST\":a=\"\";break;default:throw Error(\"Unhandled option (text_getSubstring)\");}return[d+\"[\"+b+\" : \"+a+\"]\",Blockly.Python.ORDER_MEMBER]};\r\nBlockly.Python.text_changeCase=function(a){var b={UPPERCASE:\".upper()\",LOWERCASE:\".lower()\",TITLECASE:\".title()\"}[a.getFieldValue(\"CASE\")];return[(Blockly.Python.valueToCode(a,\"TEXT\",Blockly.Python.ORDER_MEMBER)||\"''\")+b,Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.text_trim=function(a){var b={LEFT:\".lstrip()\",RIGHT:\".rstrip()\",BOTH:\".strip()\"}[a.getFieldValue(\"MODE\")];return[(Blockly.Python.valueToCode(a,\"TEXT\",Blockly.Python.ORDER_MEMBER)||\"''\")+b,Blockly.Python.ORDER_FUNCTION_CALL]};\r\nBlockly.Python.text_print=function(a){return\"print(\"+(Blockly.Python.valueToCode(a,\"TEXT\",Blockly.Python.ORDER_NONE)||\"''\")+\")\\n\"};\r\nBlockly.Python.text_prompt_ext=function(a){var b=Blockly.Python.provideFunction_(\"text_prompt\",[\"def \"+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+\"(msg):\",\"  try:\",\"    return raw_input(msg)\",\"  except NameError:\",\"    return input(msg)\"]),c=a.getField(\"TEXT\")?Blockly.Python.quote_(a.getFieldValue(\"TEXT\")):Blockly.Python.valueToCode(a,\"TEXT\",Blockly.Python.ORDER_NONE)||\"''\";b=b+\"(\"+c+\")\";\"NUMBER\"==a.getFieldValue(\"TYPE\")&&(b=\"float(\"+b+\")\");return[b,Blockly.Python.ORDER_FUNCTION_CALL]};\r\nBlockly.Python.text_prompt=Blockly.Python.text_prompt_ext;Blockly.Python.text_count=function(a){var b=Blockly.Python.valueToCode(a,\"TEXT\",Blockly.Python.ORDER_MEMBER)||\"''\";a=Blockly.Python.valueToCode(a,\"SUB\",Blockly.Python.ORDER_NONE)||\"''\";return[b+\".count(\"+a+\")\",Blockly.Python.ORDER_MEMBER]};\r\nBlockly.Python.text_replace=function(a){var b=Blockly.Python.valueToCode(a,\"TEXT\",Blockly.Python.ORDER_MEMBER)||\"''\",c=Blockly.Python.valueToCode(a,\"FROM\",Blockly.Python.ORDER_NONE)||\"''\";a=Blockly.Python.valueToCode(a,\"TO\",Blockly.Python.ORDER_NONE)||\"''\";return[b+\".replace(\"+c+\", \"+a+\")\",Blockly.Python.ORDER_MEMBER]};Blockly.Python.text_reverse=function(a){return[(Blockly.Python.valueToCode(a,\"TEXT\",Blockly.Python.ORDER_MEMBER)||\"''\")+\"[::-1]\",Blockly.Python.ORDER_MEMBER]};Blockly.Python.variables={};Blockly.Python.variables_get=function(a){return[Blockly.Python.variableDB_.getName(a.getFieldValue(\"VAR\"),Blockly.VARIABLE_CATEGORY_NAME),Blockly.Python.ORDER_ATOMIC]};Blockly.Python.variables_set=function(a){var b=Blockly.Python.valueToCode(a,\"VALUE\",Blockly.Python.ORDER_NONE)||\"0\";return Blockly.Python.variableDB_.getName(a.getFieldValue(\"VAR\"),Blockly.VARIABLE_CATEGORY_NAME)+\" = \"+b+\"\\n\"};Blockly.Python.variablesDynamic={};Blockly.Python.variables_get_dynamic=Blockly.Python.variables_get;Blockly.Python.variables_set_dynamic=Blockly.Python.variables_set;\r\n\r\nreturn Blockly.Python;\r\n})); \r\n"]},"metadata":{},"sourceType":"script"}